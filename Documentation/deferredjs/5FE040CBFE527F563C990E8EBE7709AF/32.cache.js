$wnd.Documentation.runAsyncCallback32("function uic(){sab(this,xic(new yic(this)))}\nfunction Bic(a){var b;b=new Utc;b.a+=HGc;Rtc(b,V5(a));b.a+=IGc;return new G5(b.a)}\nfunction Aic(a,b){var c;c=new Utc;c.a+=HGc;Rtc(c,V5(a));c.a+=GGc;Rtc(c,V5(b));c.a+=IGc;return new G5(c.a)}\nfunction xic(a){var b,c,d,e,f,g;c=new etb(Aic(a.c,a.u).a);jw((H6(),c.L),NGc,'PWT - Tutorial Part 9 - Add Server side Spring support');b=B6(c.L);y6(a.d);y6(a.v);b.b?Rv(b.b,b.a,b.c):D6(b.a);Qab(c,(d=new htb(Bic(a.e).a),e=B6(d.L),y6(a.t),e.b?Rv(e.b,e.a,e.c):D6(e.a),Qab(d,(f=new otb(1),mtb(f,(g=new Utc,g.a+='Part 9 - Add Server side Spring support',new G5(g.a)).a),f),y6(a.t)),a.O.k=d,d),y6(a.d));Qab(c,wic(a),y6(a.v));return c}\nfunction yic(a){this.O=a;this.e=_w($doc);this.w=_w($doc);this.B=_w($doc);this.D=_w($doc);this.G=_w($doc);this.I=_w($doc);this.K=_w($doc);this.M=_w($doc);this.f=_w($doc);this.i=_w($doc);this.k=_w($doc);this.o=_w($doc);this.r=_w($doc);this.c=_w($doc);this.u=_w($doc);this.t=new z6(this.e);this.A=new z6(this.w);this.C=new z6(this.B);this.F=new z6(this.D);this.H=new z6(this.G);this.J=new z6(this.I);this.L=new z6(this.K);this.N=new z6(this.M);this.g=new z6(this.f);this.j=new z6(this.i);this.n=new z6(this.k);this.p=new z6(this.o);this.s=new z6(this.r);this.d=new z6(this.c);this.v=new z6(this.u);this.a=(Bnc(),Anc);this.b=(Jnc(),Inc)}\nfunction zic(a,b,c,d,e,f,g,h,i,j,k,l){var m;m=new Utc;m.a+=\"<ul class='pager'> <li class='previous'><a href='#!Tuto8'>\\u2190 Part 8 : Add Ajax Bot Filter<\\/a><\\/li> <li class='next'><a href='#!Tuto10'>Part 10 : Add some Security \\u2192<\\/a><\\/li> <\\/ul>  <p>In this tutorial, we will use the <a href='http://projects.spring.io/spring-framework/'>Spring framework<\\/a> to expose our server side services in our app (from <em><a href='#!Tuto8'>Part 8 : Add Ajax Bot Filter<\\/a><\\/em>).<\\/p>  <span id='\";Rtc(m,V5(a));m.a+=bRc;Rtc(m,V5(b));m.a+=aRc;Rtc(m,V5(c));m.a+=WJc;Rtc(m,V5(d));m.a+=\"'><\\/span>  <p>Spring offers multiple way to configure the application context (xml, component scan, etc..). In this tutorial we choose the java with annotation solution with component scan, but you can do as you want!<\\/p>  <p>First, we create a controller handling the <code>/<\\/code> path in <code>fr/putnami/pwt/tutorial/server/controller/WelcomeController<\\/code> :<\\/p> <span id='\";Rtc(m,V5(e));m.a+=\"'><\\/span>  <p>Then we create a Spring configuration class in <code>fr/putnami/pwt/tutorial/server/config/MvcConfig<\\/code> :<\\/p> <span id='\";Rtc(m,V5(f));m.a+=\"'><\\/span>  <p>Finally, in order to use the Spring dispatcher, we need to remove the old <code>CommandController<\\/code> configuration and replace it by the spring configuration.<\\/p> <span id='\";Rtc(m,V5(g));m.a+=WJc;Rtc(m,V5(h));m.a+=WJc;Rtc(m,V5(i));m.a+=\"'><\\/span> <p>In order to have your services exposed to PWT client side, they have to be annotated with the <code>@Service<\\/code> annotation.<\\/p> <p>(In this tutorial the <code>@Service<\\/code> annotation use allows the registration of the services classe in the spring context thanks to component scan)<\\/p>  <span id='\";Rtc(m,V5(j));m.a+=\"'><\\/span> <p>and<\\/p> <span id='\";Rtc(m,V5(k));m.a+=\"'><\\/span>  <p>You can go to <a href='http://localhost:8080/putnami-pwt-tutorial/#!Issues'>http://localhost:8080/putnami-pwt-tutorial/#!Issues<\\/a> to try the use of the services.<\\/p>  <span id='\";Rtc(m,V5(l));m.a+=\"'><\\/span>   <ul class='pager'> <li class='previous'><a href='#!Tuto8'>\\u2190 Part 8 : Add Ajax Bot Filter<\\/a><\\/li> <li class='next'><a href='#!Tuto10'>Part 10 : Add some Security \\u2192<\\/a><\\/li> <\\/ul>\";return new G5(m.a)}\nfunction wic(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B;c=new etb(zic(a.w,a.B,a.D,a.G,a.I,a.K,a.M,a.f,a.i,a.k,a.o,a.r).a);b=B6((H6(),c.L));y6(a.A);y6(a.C);y6(a.F);y6(a.H);y6(a.J);y6(a.L);y6(a.N);y6(a.g);y6(a.j);y6(a.n);y6(a.p);y6(a.s);b.b?Rv(b.b,b.a,b.c):D6(b.a);Qab(c,(d=new otb(2),mtb(d,(n=new Utc,n.a+=_Qc,new G5(n.a)).a),jw(d.L,SJc,TJc),d),y6(a.A));Qab(c,(e=new anc,_mc(e,(o=new Utc,o.a+=\"<pre>\\ndependencies {\\n\\t...\\n\\tcompile 'fr.putnami.pwt:pwt-spring:@snapshotVersion@'\\n}<\\/pre>\",new G5(o.a)).a),$mc(e,a.a),e),y6(a.C));Qab(c,(f=new anc,_mc(f,(p=new Utc,p.a+='<pre>\\n&lt;dependency&gt;\\n\\t&lt;groupId&gt;fr.putnami.pwt&lt;/groupId&gt;\\n\\t&lt;artifactId&gt;pwt-spring&lt;/artifactId&gt;\\n\\t&lt;version&gt;@snapshotVersion@&lt;/version&gt;\\n&lt;/dependency&gt;<\\/pre>',new G5(p.a)).a),$mc(f,a.b),f),y6(a.F));Qab(c,(g=new otb(2),mtb(g,(q=new Utc,q.a+='Step 2 : <em>Setting up the Spring configuration<\\/em>',new G5(q.a)).a),jw(g.L,SJc,TJc),g),y6(a.H));Qab(c,(h=new anc,_mc(h,(r=new Utc,r.a+='<pre>\\n@Controller\\npublic class WelcomeController {\\n\\n\\t@RequestMapping(value = \"/\", method = RequestMethod.GET)\\n\\tpublic String welcomePage() {\\n\\t\\treturn \"forward:/index.html\";\\n\\t}\\n\\n}<\\/pre>',new G5(r.a)).a),$mc(h,a.a),h),y6(a.J));Qab(c,(i=new anc,_mc(i,(s=new Utc,s.a+='<pre>\\n@Configuration\\n@Import(ComandServiceConfig.class)\\n@EnableWebMvc\\n@ComponentScan(basePackages = {\"fr.putnami.pwt.tutorial.server.controller\", \"fr.putnami.pwt.tutorial.server.service\"})\\npublic class MvcConfig extends WebMvcConfigurerAdapter {\\n\\n\\tprivate static final int RESOURCE_CACHE_PERIOD = 60 * 60 * 24 * 7; // 1 week in second\\n\\n\\t@Override\\n\\tpublic void addResourceHandlers(ResourceHandlerRegistry registry) {\\n\\t\\tregistry.addResourceHandler(\"/index.html\").addResourceLocations(\"/index.html\").setCachePeriod(RESOURCE_CACHE_PERIOD);\\n\\t\\tregistry.addResourceHandler(\"/Tutorial/**\").addResourceLocations(\"/Tutorial/\").setCachePeriod(RESOURCE_CACHE_PERIOD);\\n\\t}\\n}<\\/pre>',new G5(s.a)).a),$mc(i,a.a),i),y6(a.L));Qab(c,(j=new anc,_mc(j,(t=new Utc,t.a+='<pre>\\n\\t&lt;!-- Spring configuration --&gt;\\n\\t&lt;servlet&gt;\\n\\t\\t&lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;\\n\\t\\t&lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;\\n\\t\\t&lt;init-param&gt;\\n\\t\\t\\t&lt;param-name&gt;contextClass&lt;/param-name&gt;\\n\\t\\t\\t&lt;param-value&gt;\\n\\t\\t\\t\\torg.springframework.web.context.support.AnnotationConfigWebApplicationContext\\n\\t\\t\\t&lt;/param-value&gt;\\n\\t\\t&lt;/init-param&gt;\\n\\t\\t&lt;init-param&gt;\\n\\t\\t\\t&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\\n\\t\\t\\t&lt;param-value&gt;fr.putnami.pwt.tutorial.server.config&lt;/param-value&gt;\\n\\t\\t&lt;/init-param&gt;\\n\\t\\t&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;\\n\\t&lt;/servlet&gt;\\n\\t&lt;servlet-mapping&gt;\\n\\t\\t&lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;\\n\\t\\t&lt;url-pattern&gt;/*&lt;/url-pattern&gt;\\n\\t&lt;/servlet-mapping&gt;<\\/pre>',new G5(t.a)).a),$mc(j,a.b),j),y6(a.N));Qab(c,new emb((u=new Utc,u.a+=\"<h4>Note :<\\/h4><p>You can see that we don't register the services in the web.xml anymore<\\/p>\",new G5(u.a)).a),y6(a.g));Qab(c,(k=new otb(2),mtb(k,(v=new Utc,v.a+='Step 3 : <em>Annotate your services<\\/em>',new G5(v.a)).a),jw(k.L,SJc,TJc),k),y6(a.j));Qab(c,(l=new anc,_mc(l,(w=new Utc,w.a+='<pre>\\n@Service\\npublic class ContactServiceImpl implements ContactService {\\n\\t...\\n}<\\/pre>',new G5(w.a)).a),$mc(l,a.a),l),y6(a.n));Qab(c,(m=new anc,_mc(m,(A=new Utc,A.a+='<pre>\\n@Service\\npublic class IssueServiceImpl implements IssueService {\\n\\t...\\n}<\\/pre>',new G5(A.a)).a),$mc(m,a.a),m),y6(a.p));Qab(c,new emb((B=new Utc,B.a+='<h4>Note :<\\/h4><p>You can see the result in the <code>tutorials/Part9<\\/code> folder in the PWT sources.<\\/p>',new G5(B.a)).a),y6(a.s));a.O.j=c;return c}\nq3(1381,46,OJc);var l_=trc(FIc,'Tuto9SpringPage',1381,SU);q3(929,1381,PJc,uic);_.th=function vic(a,b){G$b(this);b.xe(this)};var h_=trc(FIc,'Tuto9SpringPage_Injector',929,l_);q3(1041,1,{},yic);var i_=trc(FIc,'Tuto9SpringPage_Tuto9SpringPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets',1041,z1);var Cic;q3(698,1,jIc);_.Je=function Mic(){var a;!($4(),Cic)&&(Cic=new uic);a=new J$b;rjb(a,Cic);kjb(this.a,a)};qEc(Vt)(32);\n//# sourceURL=Documentation-32.js\n")
