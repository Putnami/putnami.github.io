$wnd.Documentation.runAsyncCallback6("function C7b(){pab(this,m7b(new n7b(this)))}\nfunction p7b(a,b){var c;c=new duc;c.a+=UGc;auc(c,X5(a));c.a+=TGc;auc(c,X5(b));c.a+=VGc;return new I5(c.a)}\nfunction m7b(a){var b,c,d,e,f,g;c=new otb(p7b(a.a,a.p).a);jw((J6(),c.L),$Gc,'PWT - Injection Framework');b=D6(c.L);A6(a.b);A6(a.r);b.b?Rv(b.b,b.a,b.c):F6(b.a);Nab(c,(d=new rtb(q7b(a.c).a),e=D6(d.L),A6(a.o),e.b?Rv(e.b,e.a,e.c):F6(e.a),Nab(d,(f=new ytb(1),wtb(f,(g=new duc,g.a+=iIc,new I5(g.a)).a),f),A6(a.o)),a.K.k=d,d),A6(a.b));Nab(c,l7b(a),A6(a.r));return c}\nfunction q7b(a){var b;b=new duc;b.a+=UGc;auc(b,X5(a));b.a+=\"'><\\/span> <p class='lead'> <strong title='Putnami Web Toolkit'>PWT<\\/strong> provides a lot of good features, reducing the amount of code needed to develop great applications.<br> But we think that it is still not enough. That's why we developped the injection part of the framework, further reducing the code amount. <\\/p>\";return new I5(b.a)}\nfunction n7b(a){this.K=a;this.c=cx($doc);this.s=cx($doc);this.u=cx($doc);this.w=cx($doc);this.B=cx($doc);this.D=cx($doc);this.G=cx($doc);this.I=cx($doc);this.d=cx($doc);this.f=cx($doc);this.i=cx($doc);this.k=cx($doc);this.a=cx($doc);this.p=cx($doc);this.o=new B6(this.c);this.t=new B6(this.s);this.v=new B6(this.u);this.A=new B6(this.w);this.C=new B6(this.B);this.F=new B6(this.D);this.H=new B6(this.G);this.J=new B6(this.I);this.e=new B6(this.d);this.g=new B6(this.f);this.j=new B6(this.i);this.n=new B6(this.k);this.b=new B6(this.a);this.r=new B6(this.p)}\nfunction l7b(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B;c=new otb(o7b(a.s,a.u,a.w,a.B,a.D,a.G,a.I,a.d,a.f,a.i,a.k).a);b=D6((J6(),c.L));A6(a.t);A6(a.v);A6(a.A);A6(a.C);A6(a.F);A6(a.H);A6(a.J);A6(a.e);A6(a.g);A6(a.j);A6(a.n);b.b?Rv(b.b,b.a,b.c):F6(b.a);Nab(c,(d=new ytb(2),wtb(d,(o=new duc,o.a+=NOc,new I5(o.a)).a),jw(d.L,dKc,eKc),d),A6(a.t));Nab(c,(e=new lmb((p=new duc,p.a+='<h4>Note :<\\/h4>The view associated to places via <code>@ActivityDescription<\\/code> annotation are created via the <code>GWT.create<\\/code> method.',new I5(p.a)).a),jmb(e,(xmb(),umb)),e),A6(a.v));Nab(c,(f=new ytb(2),wtb(f,(q=new duc,q.a+='What can be injected?',new I5(q.a)).a),jw(f.L,dKc,eKc),f),A6(a.A));Nab(c,(g=new ytb(3),wtb(g,(r=new duc,r.a+='On <em>Injected<\\/em>, <em>View<\\/em> or <em>Module<\\/em> classes',new I5(r.a)).a),jw(g.L,dKc,eKc),g),A6(a.C));Nab(c,(h=new lmb((s=new duc,s.a+='<h4>Note :<\\/h4> <ul> <li>All those annotations work with GWT rebind feature, and work only on <code>Injected<\\/code>, <code>View<\\/code> or <code>Module<\\/code> implementing classes.<\\/li> <\\/ul>',new I5(s.a)).a),jmb(h,umb),h),A6(a.F));Nab(c,(i=new ytb(3),wtb(i,(t=new duc,t.a+='On <em>View<\\/em> classes',new I5(t.a)).a),jw(i.L,dKc,eKc),i),A6(a.H));Nab(c,(j=new lmb((u=new duc,u.a+='<h4>Note :<\\/h4> <ul> <li>Those annotations work with GWT rebind feature, and work only on <code>View<\\/code> implementing classes.<\\/li> <\\/ul>',new I5(u.a)).a),jmb(j,umb),j),A6(a.J));Nab(c,(k=new ytb(3),wtb(k,(v=new duc,v.a+='On <em>Module<\\/em> classes',new I5(v.a)).a),jw(k.L,dKc,eKc),k),A6(a.e));Nab(c,(l=new lmb((w=new duc,w.a+='<h4>Note :<\\/h4> <ul> <li>Those annotations work with GWT rebind feature, and work only on <code>Module<\\/code> implementing classes.<\\/li> <\\/ul>',new I5(w.a)).a),jmb(l,umb),l),A6(a.g));Nab(c,(m=new ytb(2),wtb(m,(A=new duc,A.a+=OOc,new I5(A.a)).a),jw(m.L,dKc,eKc),m),A6(a.j));Nab(c,(n=new lnc,knc(n,(B=new duc,B.a+=POc,new I5(B.a)).a),jnc(n,(Unc(),Tnc)),n),A6(a.n));a.K.j=c;return c}\nfunction o7b(a,b,c,d,e,f,g,h,i,j,k){var l;l=new duc;l.a+=UGc;auc(l,X5(a));l.a+=\"'><\\/span> <p>We use the rebind feature of GWT. This feature can be enabled on classes which <em>implement specific interface<\\/em>. Such classes go throught the rebind mecanism when they are created via the <code>GWT.create<\\/code> method.<\\/p>  <p>We created some interfaces to implements in order to allow this injection : <ul> <li><code>Injected<\\/code> for standard classes<\\/li> <li><code>View<\\/code> for view classes<\\/li> <li><code>Module<\\/code> for entry point classes<\\/li> <\\/ul> Each one accepts different annotations corresponding to its role in the application. <\\/p> <span id='\";auc(l,X5(b));l.a+=TGc;auc(l,X5(c));l.a+=TGc;auc(l,X5(d));l.a+=\"'><\\/span> <p>We provide the following annotations :<\\/p> <ul> <li><code>PostConstruct<\\/code> used on method in order to do some things with injected stuff (after injection) at init time.<\\/li> <li><code>Templated<\\/code> used on <code>Composite<\\/code> extending class to bind it to template (see <a href='#!Internationalization'>Internationalization<\\/a>)<\\/li> <li><code>InjectResource<\\/code> used on field to generate <code>GWT.create<\\/code> call.<\\/li> <li><code>InjectService<\\/code> used on service interface to init and bind the service to the class (see <a href='#!ServerCalls'>ServerCalls<\\/a>)<\\/li> <li><code>InjectModel<\\/code> used on field of type <code>Model&lt;T&gt;<\\/code> to generate a specific model (see <a href='#!DataBinding'>DataBinding<\\/a>)<\\/li> <li><code>Initialize<\\/code> used on <code>EditorModel<\\/code> implementing field to initialize the forms (see <a href='#!DataBinding'>DataBinding<\\/a>)<\\/li> <li><code>ErrorHandler<\\/code> used on method to generate <code>ErrorHandler<\\/code> extending classes (see <a href='#!Errors'>Errors handling<\\/a>)<\\/li> <\\/ul> <span id='\";auc(l,X5(e));l.a+=iKc;auc(l,X5(f));l.a+=\"'><\\/span> <p>In addition, we provide the following annotations :<\\/p> <ul> <li><code>PresentHandler<\\/code>, <code>MayStopActivityHandler<\\/code> and <code>StopActivityHandler<\\/code> used on methods for handling the lifecycle of an activity (see <a href='#!Navigation'>Navigation<\\/a>)<\\/li> <li><code>Secured<\\/code> used on view class to secure them (see <a href='#!Security'>Security<\\/a>)<\\/li> <\\/ul> <span id='\";auc(l,X5(g));l.a+=hKc;auc(l,X5(h));l.a+=\"'><\\/span> <p>In addition, we provide the following annotations :<\\/p> <ul> <li><code>MvpDescription<\\/code> used on the class to describe the Mvp part of the app : display panel, default place, availables activities (see <a href='#!Navigation'>Navigation<\\/a>)<\\/li> <li><code>ThemeDescription<\\/code> used on the class to init the theme of the application (see <a href='#!Bootstrap'>Bootstrap<\\/a>)<\\/li> <li><code>ErrorManagmentDescription<\\/code> used on the class to describe the Error handling : set the error manager, add some error handlers. (see <a href='#!Errors'>Errors handling<\\/a>)<\\/li> <li><code>EntryPointHandler<\\/code> used on methods to be called on entry point start instead of <code>onModuleStart()<\\/code> method (see <a href='#!Navigation'>Navigation<\\/a>)<\\/li> <\\/ul> <span id='\";auc(l,X5(i));l.a+=hKc;auc(l,X5(j));l.a+=\"'><\\/span> <p>In order to use the annotations, you'll have to import the <code>Inject<\\/code> module in your module xml file<\\/p> <span id='\";auc(l,X5(k));l.a+=VGc;return new I5(l.a)}\ns3(1360,46,_Jc);var yX=Erc(HIc,'InjectionPage',1360,UU);s3(987,1,{},n7b);var uX=Erc(HIc,'InjectionPage_InjectionPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets',987,B1);var r7b;s3(637,1,wIc);_.Je=function B7b(){var a;!(a5(),r7b)&&(r7b=new C7b);a=new U$b;yjb(a,r7b);rjb(this.a,a)};s3(899,1360,aKc,C7b);_.vh=function D7b(a,b){R$b(this);b.xe(this)};var xX=Erc(HIc,'InjectionPage_Injector',899,yX);BEc(Vt)(6);\n//# sourceURL=Documentation-6.js\n")
