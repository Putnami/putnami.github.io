$wnd.Documentation.runAsyncCallback27('function xgc(){lab(this,Agc(new Bgc(this)))}\nfunction Cgc(a){var b;b=new Otc;b.a+=BGc;Ltc(b,a6(a));b.a+=CGc;return new N5(b.a)}\nfunction Egc(a,b){var c;c=new Otc;c.a+=BGc;Ltc(c,a6(a));c.a+=AGc;Ltc(c,a6(b));c.a+=CGc;return new N5(c.a)}\nfunction Agc(a){var b,c,d,e,f,g;c=new Zsb(Egc(a.c,a.I).a);jw(c.L,HGc,\'PWT - Tutorial Part 4 - Build a contact form\');b=I6(c.L);F6(a.d);F6(a.T);b.b?Rv(b.b,b.a,b.c):K6(b.a);Ykb(c,(d=new atb(Cgc(a.e).a),e=I6(d.L),F6(a.H),e.b?Rv(e.b,e.a,e.c):K6(e.a),Ykb(d,(f=new htb(1),ftb(f,(g=new Otc,g.a+=\'Part 4 - Build a contact form\',new N5(g.a)).a),f),F6(a.H)),a.gb.k=d,d),F6(a.d));Ykb(c,zgc(a),F6(a.T));return c}\nfunction Bgc(a){this.gb=a;this.e=$w($doc);this.U=$w($doc);this.W=$w($doc);this.Y=$w($doc);this.$=$w($doc);this.ab=$w($doc);this.cb=$w($doc);this.eb=$w($doc);this.f=$w($doc);this.i=$w($doc);this.k=$w($doc);this.o=$w($doc);this.r=$w($doc);this.t=$w($doc);this.v=$w($doc);this.A=$w($doc);this.C=$w($doc);this.F=$w($doc);this.J=$w($doc);this.L=$w($doc);this.N=$w($doc);this.P=$w($doc);this.R=$w($doc);this.c=$w($doc);this.I=$w($doc);this.H=new G6(this.e);this.V=new G6(this.U);this.X=new G6(this.W);this.Z=new G6(this.Y);this._=new G6(this.$);this.bb=new G6(this.ab);this.db=new G6(this.cb);this.fb=new G6(this.eb);this.g=new G6(this.f);this.j=new G6(this.i);this.n=new G6(this.k);this.p=new G6(this.o);this.s=new G6(this.r);this.u=new G6(this.t);this.w=new G6(this.v);this.B=new G6(this.A);this.D=new G6(this.C);this.G=new G6(this.F);this.K=new G6(this.J);this.M=new G6(this.L);this.O=new G6(this.N);this.Q=new G6(this.P);this.S=new G6(this.R);this.d=new G6(this.c);this.T=new G6(this.I);this.a=(vnc(),unc);this.b=(Dnc(),Cnc)}\nfunction Dgc(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v){var w;w=new Otc;w.a+="<ul class=\'pager\'> <li class=\'previous\'><a href=\'#!Tuto3\'>\\u2190 Part 3 : Build more pages<\\/a><\\/li> <li class=\'next\'><a href=\'#!Tuto5\'>Part 5 : Build a simple issues tracker \\u2192<\\/a><\\/li> <\\/ul>  <p>In this tutorial, we will add a contact form to the project inited in <em><a href=\'#!Tuto3\'>Part 3 : Build more pages<\\/a><\\/em><\\/p>   <span id=\'";Ltc(w,a6(a));w.a+="\'><\\/span>  <p>In the Part 3, we\'ve created the <code>ContactView<\\/code>, but you may have noticed that it was empty...<\\/p> <p>Let\'s create the form!<\\/p> <p>The contact form will have the following fields:<\\/p> <ul> <li>Name (a String)<\\/li> <li>Email (an email String)<\\/li> <li>Birthday (a Date)<\\/li> <li>Subject (a String among propositions)<\\/li> <li>Note of this tutorial (a number between 0 and 10)<\\/li> <li>Message (a String)<\\/li> <\\/ul> <p>So add the following the <code>ContactView.ui.xml<\\/code><\\/p> <span id=\'";Ltc(w,a6(b));w.a+="\'><\\/span>  <p>And we add to the <code>ContactView<\\/code> class the following :<\\/p> <span id=\'";Ltc(w,a6(c));w.a+="\'><\\/span>  <p>If you run the app you will see the form.<\\/p>  <span id=\'";Ltc(w,a6(d));w.a+="\'><\\/span>  <p>The DataBinding framework is a great feature of PWT. It allows you to reduce the needed java code to do great apps.<\\/p>  <p>We will bind the following model :<\\/p> <span id=\'";Ltc(w,a6(e));w.a+="\'><\\/span>  <p>Don\'t forget to add the <code>shared<\\/code> path (and the <code>client<\\/code> which was implicit) to the GWT source in the Module xml file :<\\/p> <span id=\'";Ltc(w,a6(f));w.a+="\'><\\/span>  <p>We add the contactEditor in the <code>ContactView<\\/code>. The annotation <code>@Initialize<\\/code> helps to initialize the form with a Model generated from the <code>Contact<\\/code> bean.<\\/p> <span id=\'";Ltc(w,a6(g));w.a+="\'><\\/span>  <p>Don\'t forget to add the dependency to the <code>Model<\\/code> module in the Module xml file (here the <code>fr/putnami/pwt/tutorial/Tutorial.gwt.xml<\\/code>) :<\\/p> <span id=\'";Ltc(w,a6(h));w.a+="\'><\\/span>  <p>If you run the app, you can now use the <code>Reset<\\/code> and <code>Submit<\\/code> buttons, wich are enabled when the edited bean change (ie when you change a field value).<\\/p>  <span id=\'";Ltc(w,a6(i));w.a+=SJc;Ltc(w,a6(j));w.a+="\'><\\/span>  <p>The DataBinding framework can do a lot more for you.<\\/p> <p>In the <code>ContactView.ui.xml<\\/code> we\'ve add only <code>Input...<\\/code> widgets.  But PWT provides a <code>FormGroup<\\/code> component which can auto create a <code>Label<\\/code>, <code>EditorInput<\\/code> or <code>EditorOutput<\\/code>, <code>Tooltip<\\/code>, <code>Help<\\/code>, and <code>ErrorGroup<\\/code> for a property.  If you want a specific Input, you can provide it.<\\/p>  <p>The <code>ContactView.ui.xml<\\/code> becomes :<\\/p> <span id=\'";Ltc(w,a6(k));w.a+="\'><\\/span>  <p>If you run the app now, you\'ll see the Contact form with a better layout, but without any labels. Indeed we have to provide them.<\\/p>  <p>First, we create a Constant class to define them :<\\/p> <span id=\'";Ltc(w,a6(l));w.a+="\'><\\/span>  <p>And now we provide thoses constants to the <code>Form<\\/code> by adding the <code>constantsClass<\\/code> attribute on the <code>@Initialize<\\/code> annotation.<\\/p> <span id=\'";Ltc(w,a6(m));w.a+="\'><\\/span>  <p>If you run the app now, you\'ll see that the Labels are automatically inserted.<\\/p>  <p>But we can also generate some placeholder, tooltips and help ! Just complement the constants with the following :<\\/p> <span id=\'";Ltc(w,a6(n));w.a+="\'><\\/span>  <p>If you run the app now, you\'ll see a complete contact form with inputs, labels, tooltips on inputs, and a help for each input!<\\/p>   <span id=\'";Ltc(w,a6(o));w.a+="\'><\\/span>  <p>Now we will send data to the server. To do that we will use the <code>FlushSuccessEvent<\\/code> fired by the <code>FormSubmitButton<\\/code> to send data to the server.<\\/p> <p>First of all, we add the dependency to the <code>Service<\\/code> module in the Module xml file (here the <code>fr/putnami/pwt/tutorial/Tutorial.gwt.xml<\\/code>) :<\\/p>  <span id=\'";Ltc(w,a6(p));w.a+="\'><\\/span>  <p>Then, we define the service :<\\/p> <span id=\'";Ltc(w,a6(q));w.a+="\'><\\/span>  <p>and the implementation :<\\/p> <span id=\'";Ltc(w,a6(r));w.a+="\'><\\/span>  <p>Now, we register the service in the <code>CommandService<\\/code>.  To do it, we create a <code>BasicCommandService<\\/code> Servlet via the <code>web.xml<\\/code> file, and configure it :<\\/p> <span id=\'";Ltc(w,a6(s));w.a+="\'><\\/span>   <p>In the <code>ContactView<\\/code> we have to declare and inject the service. The service is binded to the view <code>@AsyncHandler<\\/code> methods.<\\/p> <span id=\'";Ltc(w,a6(t));w.a+="\'><\\/span>  <p>Finally we call the service and reset the form when the result returns from server in <code>ContactView<\\/code>:<\\/p> <span id=\'";Ltc(w,a6(u));w.a+="\'><\\/span>  <p>Now run the app and submit some contacts. You\'ll see on the server console the received Contacts.<\\/p> <span id=\'";Ltc(w,a6(v));w.a+="\'><\\/span>   <ul class=\'pager\'> <li class=\'previous\'><a href=\'#!Tuto3\'>\\u2190 Part 3 : Build more pages<\\/a><\\/li> <li class=\'next\'><a href=\'#!Tuto5\'>Part 5 : Build a simple issues tracker \\u2192<\\/a><\\/li> <\\/ul>";return new N5(w.a)}\nfunction zgc(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W;c=new Zsb(Dgc(a.U,a.W,a.Y,a.$,a.ab,a.cb,a.eb,a.f,a.i,a.k,a.o,a.r,a.t,a.v,a.A,a.C,a.F,a.J,a.L,a.N,a.P,a.R).a);b=I6(c.L);F6(a.V);F6(a.X);F6(a.Z);F6(a._);F6(a.bb);F6(a.db);F6(a.fb);F6(a.g);F6(a.j);F6(a.n);F6(a.p);F6(a.s);F6(a.u);F6(a.w);F6(a.B);F6(a.D);F6(a.G);F6(a.K);F6(a.M);F6(a.O);F6(a.Q);F6(a.S);b.b?Rv(b.b,b.a,b.c):K6(b.a);Ykb(c,(d=new htb(2),ftb(d,(A=new Otc,A.a+=\'Step 1 : <em>Create the form<\\/em>\',new N5(A.a)).a),jw(d.L,NJc,OJc),d),F6(a.V));Ykb(c,(e=new Wmc,Vmc(e,(B=new Otc,B.a+=\'<pre>\\n&lt;!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent"&gt;\\n&lt;ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"\\n\\txmlns:w="urn:import:fr.putnami.pwt.core.widget.client"&gt;\\n\\n\\t&lt;ui:with field="noteItems" type="java.util.List" /&gt;\\n\\t&lt;ui:with field="subjectItems" type="java.util.List" /&gt;\\n\\n\\t&lt;w:HTMLPanel&gt;\\n\\t\\t&lt;w:Heading level="1" text="Contact" styleName="page-header"/&gt;\\n\\t\\t&lt;w:Form ui:field="contactEditor" layout="HORIZONTAL"&gt;\\n\\t\\t\\t&lt;fieldset&gt;\\n\\t\\t\\t\\t&lt;legend&gt;You&lt;/legend&gt;\\n\\t\\t\\t\\t&lt;w:InputText path="name" placeholder="Name..."/&gt;\\n\\t\\t\\t\\t&lt;w:InputEmail path="email" placeholder="Email..."/&gt;\\n\\t\\t\\t\\t&lt;w:InputDate path="birthday" /&gt;\\n\\t\\t\\t&lt;/fieldset&gt;\\n\\t\\t\\t&lt;fieldset&gt;\\n\\t\\t\\t\\t&lt;legend&gt;Your interest in this tutorial&lt;/legend&gt;\\n\\t\\t\\t\\t&lt;w:InputSlider path="tutorialNote" items="{noteItems}" /&gt;\\n\\t\\t\\t&lt;/fieldset&gt;\\n\\t\\t\\t&lt;fieldset&gt;\\n\\t\\t\\t\\t&lt;legend&gt;Your message&lt;/legend&gt;\\n\\t\\t\\t\\t&lt;w:InputSelect path="subject" items="{subjectItems}" /&gt;\\n\\t\\t\\t\\t&lt;w:InputTextArea  path="message" /&gt;\\n\\t\\t\\t&lt;/fieldset&gt;\\n\\t\\t\\t&lt;w:Footer&gt;\\n\\t\\t\\t\\t&lt;w:FormResetButton text="Reset" size="LARGE" /&gt;\\n\\t\\t\\t\\t&lt;w:FormSubmitButton text="Submit" size="LARGE" /&gt;\\n\\t\\t\\t&lt;/w:Footer&gt;\\n\\t\\t&lt;/w:Form&gt;\\n\\t&lt;/w:HTMLPanel&gt;\\n&lt;/ui:UiBinder&gt;<\\/pre>\',new N5(B.a)).a),Umc(e,a.b),e),F6(a.X));Ykb(c,(f=new Wmc,Vmc(f,(C=new Otc,C.a+=\'<pre>\\n\\t@UiField(provided = true)\\n\\tList&lt;Integer&gt; noteItems = Arrays.asList(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\\n\\n\\t@UiField(provided = true)\\n\\tList&lt;String&gt; subjectItems = Arrays.asList("About this tutorial", "About PWT", "About Putnami Team", "Other");<\\/pre>\',new N5(C.a)).a),Umc(f,a.a),f),F6(a.Z));Ykb(c,(g=new htb(2),ftb(g,(D=new Otc,D.a+=\'Step 2 : <em>Use DataBinding framework<\\/em>\',new N5(D.a)).a),jw(g.L,NJc,OJc),g),F6(a._));Ykb(c,(h=new Wmc,Vmc(h,(F=new Otc,F.a+=\'<pre>\\npackage fr.putnami.pwt.tutorial.shared.domain;\\n\\nimport java.io.Serializable;\\nimport java.util.Date;\\n\\npublic class Contact implements Serializable{\\n\\n    private static final long serialVersionUID = 1L;\\n\\n\\tprivate String name;\\n\\tprivate String email;\\n\\tprivate Date birthday;\\n\\n\\tprivate Integer tutorialNote = Integer.valueOf(5); // Default Value\\n\\n\\tprivate String subject = "About PWT"; // Default Value\\n\\tprivate String message;\\n\\n    ... //Getters and Setters\\n}<\\/pre>\',new N5(F.a)).a),Umc(h,a.a),h),F6(a.bb));Ykb(c,(i=new Wmc,Vmc(i,(G=new Otc,G.a+=\'<pre>\\n\\t&lt;source path="client" /&gt;\\n\\t&lt;source path="shared" /&gt;<\\/pre>\',new N5(G.a)).a),Umc(i,a.b),i),F6(a.db));Ykb(c,(j=new Wmc,Vmc(j,(H=new Otc,H.a+=\'<pre>\\n\\t@UiField\\n\\t@Initialize\\n\\tForm&lt;Contact&gt; contactEditor;\\n<\\/pre>\',new N5(H.a)).a),Umc(j,a.a),j),F6(a.fb));Ykb(c,(k=new Wmc,Vmc(k,(I=new Otc,I.a+=\'<pre>\\n\\t&lt;!-- PWT Module to extends in order to use PWT Model features--&gt;\\n\\t&lt;inherits name="fr.putnami.pwt.core.model.Model"/&gt;\\n<\\/pre>\',new N5(I.a)).a),Umc(k,a.b),k),F6(a.g));Ykb(c,new Zlb((J=new Otc,J.a+=\'<h4>Note : <\\/h4><p><em>The <code>Submit<\\/code> button does nothing for now.<\\/em><\\/p>\',new N5(J.a)).a),F6(a.j));Ykb(c,(l=new htb(2),ftb(l,(K=new Otc,K.a+=\'Step 3 : <em>Go further with DataBinding framework<\\/em>\',new N5(K.a)).a),jw(l.L,NJc,OJc),l),F6(a.n));Ykb(c,(m=new Wmc,Vmc(m,(L=new Otc,L.a+=\'<pre>\\n\\t...\\n\\t&lt;w:Form ui:field="contactEditor" layout="HORIZONTAL"&gt;\\n\\t\\t&lt;fieldset&gt;\\n\\t\\t\\t&lt;legend&gt;You&lt;/legend&gt;\\n\\t\\t\\t&lt;w:FormGroup path="name" /&gt;\\n\\t\\t\\t&lt;w:FormGroup path="email" &gt;\\n\\t\\t\\t\\t&lt;w:InputEmail /&gt;\\n\\t\\t\\t&lt;/w:FormGroup&gt;\\n\\t\\t\\t&lt;w:FormGroup path="birthday" /&gt;\\n\\t\\t&lt;/fieldset&gt;\\n\\t\\t&lt;fieldset&gt;\\n\\t\\t\\t&lt;legend&gt;Your interest in this tutorial&lt;/legend&gt;\\n\\t\\t\\t&lt;w:FormGroup path="tutorialNote"&gt;\\n\\t\\t\\t\\t&lt;w:InputSlider items="{noteItems}" /&gt;\\n\\t\\t\\t&lt;/w:FormGroup&gt;\\n\\t\\t&lt;/fieldset&gt;\\n\\t\\t&lt;fieldset&gt;\\n\\t\\t\\t&lt;legend&gt;your message&lt;/legend&gt;\\n\\t\\t\\t&lt;w:FormGroup path="subject"&gt;\\n\\t\\t\\t\\t&lt;w:InputSelect items="{subjectItems}" /&gt;\\n\\t\\t\\t&lt;/w:FormGroup&gt;\\n\\t\\t\\t&lt;w:FormGroup path="message"&gt;\\n\\t\\t\\t\\t&lt;w:InputTextArea /&gt;\\n\\t\\t\\t&lt;/w:FormGroup&gt;\\n\\t\\t&lt;/fieldset&gt;\\n\\t\\t&lt;w:Footer&gt;\\n\\t\\t\\t&lt;w:FormResetButton text="Reset" size="LARGE" /&gt;\\n\\t\\t\\t&lt;w:FormSubmitButton text="Submit" size="LARGE" /&gt;\\n\\t\\t&lt;/w:Footer&gt;\\n\\t&lt;/w:Form&gt;\\n    ...\\n<\\/pre>\',new N5(L.a)).a),Umc(m,a.b),m),F6(a.p));Ykb(c,(n=new Wmc,Vmc(n,(M=new Otc,M.a+=\'<pre>\\npackage fr.putnami.pwt.tutorial.shared.constants;\\n\\nimport fr.putnami.pwt.core.editor.shared.constant.ValidationConstants;\\n\\npublic interface ContactConstants extends ValidationConstants {\\n\\n\\t@DefaultStringValue("Name")\\n\\tString name();\\n\\n\\t@DefaultStringValue("Email")\\n\\tString email();\\n\\n\\t@DefaultStringValue("Birthday")\\n\\tString birthday();\\n\\n\\t@DefaultStringValue("Tutorial note")\\n\\tString tutorialnote();\\n\\n\\t@DefaultStringValue("Subject")\\n\\tString subject();\\n\\n\\t@DefaultStringValue("Message")\\n\\tString message();\\n}<\\/pre>\',new N5(M.a)).a),Umc(n,a.a),n),F6(a.s));Ykb(c,(o=new Wmc,Vmc(o,(N=new Otc,N.a+=\'<pre>\\n\\t@UiField\\n\\t@Initialize(constantsClass = ContactConstants.class)\\n\\tForm&lt;Contact&gt; contactEditor;\\n<\\/pre>\',new N5(N.a)).a),Umc(o,a.a),o),F6(a.u));Ykb(c,(p=new Wmc,Vmc(p,(O=new Otc,O.a+=\'<pre>\\n\\t...\\n\\t/* Placeholders */\\n\\n\\t@DefaultStringValue("Your name...")\\n\\tString namePlaceholder();\\n\\n\\t@DefaultStringValue("Your email...")\\n\\tString emailPlaceholder();\\n\\n\\t@DefaultStringValue("Your birthday...")\\n\\tString birthdayPlaceholder();\\n\\n\\t@DefaultStringValue("Your message...")\\n\\tString messagePlaceholder();\\n\\n\\t/* Tooltips */\\n\\n\\t@DefaultStringValue("Enter your name")\\n\\tString nameTooltip();\\n\\n\\t@DefaultStringValue("Enter your email")\\n\\tString emailTooltip();\\n\\n\\t@DefaultStringValue("Enter your birthday")\\n\\tString birthdayTooltip();\\n\\n\\t@DefaultStringValue("Select a note")\\n\\tString tutorialnoteTooltip();\\n\\n\\t@DefaultStringValue("Select a subject")\\n\\tString subjectTooltip();\\n\\n\\t@DefaultStringValue("Enter your message")\\n\\tString messageTooltip();\\n\\n\\t/* Help */\\n\\n\\t@DefaultStringValue("Enter your full name (Lastname and Firstname)")\\n\\tString nameHelp();\\n\\n\\t@DefaultStringValue("Enter your email so we can contact you back")\\n\\tString emailHelp();\\n\\n\\t@DefaultStringValue("Enter your birthday, maybe you\\\'ll have some present")\\n\\tString birthdayHelp();\\n\\n\\t@DefaultStringValue("Select a note for this tutorial")\\n\\tString tutorialnoteHelp();\\n\\n\\t@DefaultStringValue("Select a subject for your message")\\n\\tString subjectHelp();\\n\\n\\t@DefaultStringValue("Enter your message, we will read it!")\\n\\tString messageHelp();\\n<\\/pre>\',new N5(O.a)).a),Umc(p,a.a),p),F6(a.w));Ykb(c,(q=new htb(2),ftb(q,(P=new Otc,P.a+=\'Step 4 : <em>Use ServerCalls framework<\\/em>\',new N5(P.a)).a),jw(q.L,NJc,OJc),q),F6(a.B));Ykb(c,(r=new Wmc,Vmc(r,(Q=new Otc,Q.a+=\'<pre>\\n\\t&lt;!-- PWT Module to extends in order to use PWT Service features--&gt;\\n\\t&lt;inherits name="fr.putnami.pwt.core.service.Service"/&gt;\\n<\\/pre>\',new N5(Q.a)).a),Umc(r,a.b),r),F6(a.D));Ykb(c,(s=new Wmc,Vmc(s,(R=new Otc,R.a+=\'<pre>\\npackage fr.putnami.pwt.tutorial.shared.service;\\n\\nimport fr.putnami.pwt.tutorial.shared.domain.Contact;\\n\\npublic interface ContactService {\\n\\n\\tvoid sendContact(Contact contact);\\n}\\n<\\/pre>\',new N5(R.a)).a),Umc(s,a.a),s),F6(a.G));Ykb(c,(t=new Wmc,Vmc(t,(S=new Otc,S.a+=\'<pre>\\npackage fr.putnami.pwt.tutorial.server.service;\\n\\nimport fr.putnami.pwt.tutorial.shared.domain.Contact;\\nimport fr.putnami.pwt.tutorial.shared.service.ContactService;\\n\\npublic class ContactServiceImpl implements ContactService {\\n\\n\\t@Override\\n\\tpublic void sendContact(Contact contact) {\\n\\t\\t// Do Something\\n\\t\\tSystem.out.println("Contact received : " + contact.toString());\\n\\t}\\n}<\\/pre>\',new N5(S.a)).a),Umc(t,a.a),t),F6(a.K));Ykb(c,(u=new Wmc,Vmc(u,(T=new Otc,T.a+=\'<pre>\\n&lt;?xml version="1.0" encoding="UTF-8"?&gt;\\n&lt;!DOCTYPE web-app\\n\\tPUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"\\n\\t"http://java.sun.com/dtd/web-app_2_3.dtd"&gt;\\n\\n&lt;web-app&gt;\\n\\t&lt;!-- Command service servlet --&gt;\\n\\t&lt;servlet&gt;\\n\\t\\t&lt;servlet-name&gt;commandService&lt;/servlet-name&gt;\\n\\t\\t&lt;servlet-class&gt;fr.putnami.pwt.core.service.server.service.BasicCommandService&lt;/servlet-class&gt;\\n\\t\\t&lt;init-param&gt;\\n\\t\\t\\t&lt;param-name&gt;services&lt;/param-name&gt;\\n\\t\\t\\t&lt;param-value&gt;fr.putnami.pwt.tutorial.server.service.ContactServiceImpl&lt;/param-value&gt;\\n\\t\\t&lt;/init-param&gt;\\n\\t&lt;/servlet&gt;\\n\\t&lt;servlet-mapping&gt;\\n\\t\\t&lt;servlet-name&gt;commandService&lt;/servlet-name&gt;\\n\\t\\t&lt;url-pattern&gt;commandService&lt;/url-pattern&gt;\\n\\t&lt;/servlet-mapping&gt;\\n&lt;/web-app&gt;<\\/pre>\',new N5(T.a)).a),Umc(u,a.b),u),F6(a.M));Ykb(c,(v=new Wmc,Vmc(v,(U=new Otc,U.a+=\'<pre>\\nimport fr.putnami.pwt.core.inject.client.annotation.InjectService;\\nimport fr.putnami.pwt.tutorial.shared.service.ContactService;\\n...\\n@InjectService\\nContactService service;\\n<\\/pre>\',new N5(U.a)).a),Umc(v,a.a),v),F6(a.O));Ykb(c,(w=new Wmc,Vmc(w,(V=new Otc,V.a+=\'<pre>\\n\\t@UiHandler("contactEditor")\\n\\tpublic void onContactSubmit(FlushSuccessEvent event) {\\n\\t\\tservice.sendContact((Contact) event.getValue());\\n\\t}\\n\\n\\t@AsyncHandler\\n\\tpublic void onSendContact(Void result) {\\n\\t\\tcontactEditor.edit(new Contact());\\n\\t}\\n<\\/pre>\',new N5(V.a)).a),Umc(w,a.a),w),F6(a.Q));Ykb(c,new Zlb((W=new Otc,W.a+=\'<h4>Note :<\\/h4><p>You can see the result in the <code>tutorials/Part4<\\/code> folder in the PWT sources.<\\/p>\',new N5(W.a)).a),F6(a.S));a.gb.j=c;return c}\nx3(1378,46,JJc);var Q$=mrc(AIc,\'Tuto4BindAFormPage\',1378,ZU);x3(926,1378,KJc,xgc);_.uh=function ygc(a,b){A$b(this);b.xe(this)};var M$=mrc(AIc,\'Tuto4BindAFormPage_Injector\',926,Q$);x3(1038,1,{},Bgc);var N$=mrc(AIc,\'Tuto4BindAFormPage_Tuto4BindAFormPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets\',1038,G1);var Fgc;x3(688,1,eIc);_.Je=function Pgc(){var a;!(f5(),Fgc)&&(Fgc=new xgc);a=new D$b;ijb(a,Fgc);bjb(this.a,a)};kEc(Vt)(27);\n//# sourceURL=Documentation-27.js\n')
