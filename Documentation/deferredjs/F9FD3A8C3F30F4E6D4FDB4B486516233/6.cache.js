$wnd.Documentation.runAsyncCallback6("function l7b(){lab(this,X6b(new Y6b(this)))}\nfunction $6b(a,b){var c;c=new Otc;c.a+=BGc;Ltc(c,a6(a));c.a+=AGc;Ltc(c,a6(b));c.a+=CGc;return new N5(c.a)}\nfunction X6b(a){var b,c,d,e,f,g;c=new Zsb($6b(a.a,a.p).a);jw(c.L,HGc,'PWT - Injection Framework');b=I6(c.L);F6(a.b);F6(a.r);b.b?Rv(b.b,b.a,b.c):K6(b.a);Ykb(c,(d=new atb(_6b(a.c).a),e=I6(d.L),F6(a.o),e.b?Rv(e.b,e.a,e.c):K6(e.a),Ykb(d,(f=new htb(1),ftb(f,(g=new Otc,g.a+=SHc,new N5(g.a)).a),f),F6(a.o)),a.K.k=d,d),F6(a.b));Ykb(c,W6b(a),F6(a.r));return c}\nfunction _6b(a){var b;b=new Otc;b.a+=BGc;Ltc(b,a6(a));b.a+=\"'><\\/span> <p class='lead'> <strong title='Putnami Web Toolkit'>PWT<\\/strong> provides a lot of good features, reducing the amount of code needed to develop great applications.<br> But we think that it is still not enough. That's why we developped the injection part of the framework, further reducing the code amount. <\\/p>\";return new N5(b.a)}\nfunction Y6b(a){this.K=a;this.c=$w($doc);this.s=$w($doc);this.u=$w($doc);this.w=$w($doc);this.B=$w($doc);this.D=$w($doc);this.G=$w($doc);this.I=$w($doc);this.d=$w($doc);this.f=$w($doc);this.i=$w($doc);this.k=$w($doc);this.a=$w($doc);this.p=$w($doc);this.o=new G6(this.c);this.t=new G6(this.s);this.v=new G6(this.u);this.A=new G6(this.w);this.C=new G6(this.B);this.F=new G6(this.D);this.H=new G6(this.G);this.J=new G6(this.I);this.e=new G6(this.d);this.g=new G6(this.f);this.j=new G6(this.i);this.n=new G6(this.k);this.b=new G6(this.a);this.r=new G6(this.p)}\nfunction W6b(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B;c=new Zsb(Z6b(a.s,a.u,a.w,a.B,a.D,a.G,a.I,a.d,a.f,a.i,a.k).a);b=I6(c.L);F6(a.t);F6(a.v);F6(a.A);F6(a.C);F6(a.F);F6(a.H);F6(a.J);F6(a.e);F6(a.g);F6(a.j);F6(a.n);b.b?Rv(b.b,b.a,b.c):K6(b.a);Ykb(c,(d=new htb(2),ftb(d,(o=new Otc,o.a+=vOc,new N5(o.a)).a),jw(d.L,NJc,OJc),d),F6(a.t));Ykb(c,(e=new Zlb((p=new Otc,p.a+='<h4>Note :<\\/h4>The view associated to places via <code>@ActivityDescription<\\/code> annotation are created via the <code>GWT.create<\\/code> method.',new N5(p.a)).a),Xlb(e,(jmb(),gmb)),e),F6(a.v));Ykb(c,(f=new htb(2),ftb(f,(q=new Otc,q.a+='What can be injected?',new N5(q.a)).a),jw(f.L,NJc,OJc),f),F6(a.A));Ykb(c,(g=new htb(3),ftb(g,(r=new Otc,r.a+='On <em>Injected<\\/em>, <em>View<\\/em> or <em>Module<\\/em> classes',new N5(r.a)).a),jw(g.L,NJc,OJc),g),F6(a.C));Ykb(c,(h=new Zlb((s=new Otc,s.a+='<h4>Note :<\\/h4> <ul> <li>All those annotations work with GWT rebind feature, and work only on <code>Injected<\\/code>, <code>View<\\/code> or <code>Module<\\/code> implementing classes.<\\/li> <\\/ul>',new N5(s.a)).a),Xlb(h,gmb),h),F6(a.F));Ykb(c,(i=new htb(3),ftb(i,(t=new Otc,t.a+='On <em>View<\\/em> classes',new N5(t.a)).a),jw(i.L,NJc,OJc),i),F6(a.H));Ykb(c,(j=new Zlb((u=new Otc,u.a+='<h4>Note :<\\/h4> <ul> <li>Those annotations work with GWT rebind feature, and work only on <code>View<\\/code> implementing classes.<\\/li> <\\/ul>',new N5(u.a)).a),Xlb(j,gmb),j),F6(a.J));Ykb(c,(k=new htb(3),ftb(k,(v=new Otc,v.a+='On <em>Module<\\/em> classes',new N5(v.a)).a),jw(k.L,NJc,OJc),k),F6(a.e));Ykb(c,(l=new Zlb((w=new Otc,w.a+='<h4>Note :<\\/h4> <ul> <li>Those annotations work with GWT rebind feature, and work only on <code>Module<\\/code> implementing classes.<\\/li> <\\/ul>',new N5(w.a)).a),Xlb(l,gmb),l),F6(a.g));Ykb(c,(m=new htb(2),ftb(m,(A=new Otc,A.a+=wOc,new N5(A.a)).a),jw(m.L,NJc,OJc),m),F6(a.j));Ykb(c,(n=new Wmc,Vmc(n,(B=new Otc,B.a+=xOc,new N5(B.a)).a),Umc(n,(Dnc(),Cnc)),n),F6(a.n));a.K.j=c;return c}\nfunction Z6b(a,b,c,d,e,f,g,h,i,j,k){var l;l=new Otc;l.a+=BGc;Ltc(l,a6(a));l.a+=\"'><\\/span> <p>We use the rebind feature of GWT. This feature can be enabled on classes which <em>implement specific interface<\\/em>. Such classes go throught the rebind mecanism when they are created via the <code>GWT.create<\\/code> method.<\\/p>  <p>We created some interfaces to implements in order to allow this injection : <ul> <li><code>Injected<\\/code> for standard classes<\\/li> <li><code>View<\\/code> for view classes<\\/li> <li><code>Module<\\/code> for entry point classes<\\/li> <\\/ul> Each one accepts different annotations corresponding to its role in the application. <\\/p> <span id='\";Ltc(l,a6(b));l.a+=AGc;Ltc(l,a6(c));l.a+=AGc;Ltc(l,a6(d));l.a+=\"'><\\/span> <p>We provide the following annotations :<\\/p> <ul> <li><code>PostConstruct<\\/code> used on method in order to do some things with injected stuff (after injection) at init time.<\\/li> <li><code>Templated<\\/code> used on <code>Composite<\\/code> extending class to bind it to template (see <a href='#!Internationalization'>Internationalization<\\/a>)<\\/li> <li><code>InjectResource<\\/code> used on field to generate <code>GWT.create<\\/code> call.<\\/li> <li><code>InjectService<\\/code> used on service interface to init and bind the service to the class (see <a href='#!ServerCalls'>ServerCalls<\\/a>)<\\/li> <li><code>InjectModel<\\/code> used on field of type <code>Model&lt;T&gt;<\\/code> to generate a specific model (see <a href='#!DataBinding'>DataBinding<\\/a>)<\\/li> <li><code>Initialize<\\/code> used on <code>EditorModel<\\/code> implementing field to initialize the forms (see <a href='#!DataBinding'>DataBinding<\\/a>)<\\/li> <li><code>ErrorHandler<\\/code> used on method to generate <code>ErrorHandler<\\/code> extending classes (see <a href='#!Errors'>Errors handling<\\/a>)<\\/li> <\\/ul> <span id='\";Ltc(l,a6(e));l.a+=SJc;Ltc(l,a6(f));l.a+=\"'><\\/span> <p>In addition, we provide the following annotations :<\\/p> <ul> <li><code>PresentHandler<\\/code>, <code>MayStopActivityHandler<\\/code> and <code>StopActivityHandler<\\/code> used on methods for handling the lifecycle of an activity (see <a href='#!Navigation'>Navigation<\\/a>)<\\/li> <li><code>Secured<\\/code> used on view class to secure them (see <a href='#!Security'>Security<\\/a>)<\\/li> <\\/ul> <span id='\";Ltc(l,a6(g));l.a+=RJc;Ltc(l,a6(h));l.a+=\"'><\\/span> <p>In addition, we provide the following annotations :<\\/p> <ul> <li><code>MvpDescription<\\/code> used on the class to describe the Mvp part of the app : display panel, default place, availables activities (see <a href='#!Navigation'>Navigation<\\/a>)<\\/li> <li><code>ThemeDescription<\\/code> used on the class to init the theme of the application (see <a href='#!Bootstrap'>Bootstrap<\\/a>)<\\/li> <li><code>ErrorManagmentDescription<\\/code> used on the class to describe the Error handling : set the error manager, add some error handlers. (see <a href='#!Errors'>Errors handling<\\/a>)<\\/li> <li><code>EntryPointHandler<\\/code> used on methods to be called on entry point start instead of <code>onModuleStart()<\\/code> method (see <a href='#!Navigation'>Navigation<\\/a>)<\\/li> <\\/ul> <span id='\";Ltc(l,a6(i));l.a+=RJc;Ltc(l,a6(j));l.a+=\"'><\\/span> <p>In order to use the annotations, you'll have to import the <code>Inject<\\/code> module in your module xml file<\\/p> <span id='\";Ltc(l,a6(k));l.a+=CGc;return new N5(l.a)}\nx3(1364,46,JJc);var DX=mrc(pIc,'InjectionPage',1364,ZU);x3(990,1,{},Y6b);var zX=mrc(pIc,'InjectionPage_InjectionPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets',990,G1);var a7b;x3(637,1,eIc);_.Je=function k7b(){var a;!(f5(),a7b)&&(a7b=new l7b);a=new D$b;ijb(a,a7b);bjb(this.a,a)};x3(902,1364,KJc,l7b);_.uh=function m7b(a,b){A$b(this);b.xe(this)};var CX=mrc(pIc,'InjectionPage_Injector',902,DX);kEc(Vt)(6);\n//# sourceURL=Documentation-6.js\n")
