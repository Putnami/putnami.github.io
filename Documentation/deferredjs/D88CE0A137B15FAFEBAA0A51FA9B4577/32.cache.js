$wnd.Documentation.runAsyncCallback32("function sic(){rab(this,vic(new wic(this)))}\nfunction zic(a){var b;b=new Stc;b.a+=FGc;Ptc(b,U5(a));b.a+=GGc;return new F5(b.a)}\nfunction yic(a,b){var c;c=new Stc;c.a+=FGc;Ptc(c,U5(a));c.a+=EGc;Ptc(c,U5(b));c.a+=GGc;return new F5(c.a)}\nfunction vic(a){var b,c,d,e,f,g;c=new ctb(yic(a.c,a.u).a);jw((G6(),c.L),LGc,'PWT - Tutorial Part 9 - Add Server side Spring support');b=A6(c.L);x6(a.d);x6(a.v);b.b?Rv(b.b,b.a,b.c):C6(b.a);Pab(c,(d=new ftb(zic(a.e).a),e=A6(d.L),x6(a.t),e.b?Rv(e.b,e.a,e.c):C6(e.a),Pab(d,(f=new mtb(1),ktb(f,(g=new Stc,g.a+='Part 9 - Add Server side Spring support',new F5(g.a)).a),f),x6(a.t)),a.O.k=d,d),x6(a.d));Pab(c,uic(a),x6(a.v));return c}\nfunction wic(a){this.O=a;this.e=_w($doc);this.w=_w($doc);this.B=_w($doc);this.D=_w($doc);this.G=_w($doc);this.I=_w($doc);this.K=_w($doc);this.M=_w($doc);this.f=_w($doc);this.i=_w($doc);this.k=_w($doc);this.o=_w($doc);this.r=_w($doc);this.c=_w($doc);this.u=_w($doc);this.t=new y6(this.e);this.A=new y6(this.w);this.C=new y6(this.B);this.F=new y6(this.D);this.H=new y6(this.G);this.J=new y6(this.I);this.L=new y6(this.K);this.N=new y6(this.M);this.g=new y6(this.f);this.j=new y6(this.i);this.n=new y6(this.k);this.p=new y6(this.o);this.s=new y6(this.r);this.d=new y6(this.c);this.v=new y6(this.u);this.a=(znc(),ync);this.b=(Hnc(),Gnc)}\nfunction xic(a,b,c,d,e,f,g,h,i,j,k,l){var m;m=new Stc;m.a+=\"<ul class='pager'> <li class='previous'><a href='#!Tuto8'>\\u2190 Part 8 : Add Ajax Bot Filter<\\/a><\\/li> <li class='next'><a href='#!Tuto10'>Part 10 : Add some Security \\u2192<\\/a><\\/li> <\\/ul>  <p>In this tutorial, we will use the <a href='http://projects.spring.io/spring-framework/'>Spring framework<\\/a> to expose our server side services in our app (from <em><a href='#!Tuto8'>Part 8 : Add Ajax Bot Filter<\\/a><\\/em>).<\\/p>  <span id='\";Ptc(m,U5(a));m.a+=_Qc;Ptc(m,U5(b));m.a+=$Qc;Ptc(m,U5(c));m.a+=UJc;Ptc(m,U5(d));m.a+=\"'><\\/span>  <p>Spring offers multiple way to configure the application context (xml, component scan, etc..). In this tutorial we choose the java with annotation solution with component scan, but you can do as you want!<\\/p>  <p>First, we create a controller handling the <code>/<\\/code> path in <code>fr/putnami/pwt/tutorial/server/controller/WelcomeController<\\/code> :<\\/p> <span id='\";Ptc(m,U5(e));m.a+=\"'><\\/span>  <p>Then we create a Spring configuration class in <code>fr/putnami/pwt/tutorial/server/config/MvcConfig<\\/code> :<\\/p> <span id='\";Ptc(m,U5(f));m.a+=\"'><\\/span>  <p>Finally, in order to use the Spring dispatcher, we need to remove the old <code>CommandController<\\/code> configuration and replace it by the spring configuration.<\\/p> <span id='\";Ptc(m,U5(g));m.a+=UJc;Ptc(m,U5(h));m.a+=UJc;Ptc(m,U5(i));m.a+=\"'><\\/span> <p>In order to have your services exposed to PWT client side, they have to be annotated with the <code>@Service<\\/code> annotation.<\\/p> <p>(In this tutorial the <code>@Service<\\/code> annotation use allows the registration of the services classe in the spring context thanks to component scan)<\\/p>  <span id='\";Ptc(m,U5(j));m.a+=\"'><\\/span> <p>and<\\/p> <span id='\";Ptc(m,U5(k));m.a+=\"'><\\/span>  <p>You can go to <a href='http://localhost:8080/putnami-pwt-tutorial/#!Issues'>http://localhost:8080/putnami-pwt-tutorial/#!Issues<\\/a> to try the use of the services.<\\/p>  <span id='\";Ptc(m,U5(l));m.a+=\"'><\\/span>   <ul class='pager'> <li class='previous'><a href='#!Tuto8'>\\u2190 Part 8 : Add Ajax Bot Filter<\\/a><\\/li> <li class='next'><a href='#!Tuto10'>Part 10 : Add some Security \\u2192<\\/a><\\/li> <\\/ul>\";return new F5(m.a)}\nfunction uic(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B;c=new ctb(xic(a.w,a.B,a.D,a.G,a.I,a.K,a.M,a.f,a.i,a.k,a.o,a.r).a);b=A6((G6(),c.L));x6(a.A);x6(a.C);x6(a.F);x6(a.H);x6(a.J);x6(a.L);x6(a.N);x6(a.g);x6(a.j);x6(a.n);x6(a.p);x6(a.s);b.b?Rv(b.b,b.a,b.c):C6(b.a);Pab(c,(d=new mtb(2),ktb(d,(n=new Stc,n.a+=ZQc,new F5(n.a)).a),jw(d.L,QJc,RJc),d),x6(a.A));Pab(c,(e=new $mc,Zmc(e,(o=new Stc,o.a+=\"<pre>\\ndependencies {\\n\\t...\\n\\tcompile 'fr.putnami.pwt:pwt-spring:@snapshotVersion@'\\n}<\\/pre>\",new F5(o.a)).a),Ymc(e,a.a),e),x6(a.C));Pab(c,(f=new $mc,Zmc(f,(p=new Stc,p.a+='<pre>\\n&lt;dependency&gt;\\n\\t&lt;groupId&gt;fr.putnami.pwt&lt;/groupId&gt;\\n\\t&lt;artifactId&gt;pwt-spring&lt;/artifactId&gt;\\n\\t&lt;version&gt;@snapshotVersion@&lt;/version&gt;\\n&lt;/dependency&gt;<\\/pre>',new F5(p.a)).a),Ymc(f,a.b),f),x6(a.F));Pab(c,(g=new mtb(2),ktb(g,(q=new Stc,q.a+='Step 2 : <em>Setting up the Spring configuration<\\/em>',new F5(q.a)).a),jw(g.L,QJc,RJc),g),x6(a.H));Pab(c,(h=new $mc,Zmc(h,(r=new Stc,r.a+='<pre>\\n@Controller\\npublic class WelcomeController {\\n\\n\\t@RequestMapping(value = \"/\", method = RequestMethod.GET)\\n\\tpublic String welcomePage() {\\n\\t\\treturn \"forward:/index.html\";\\n\\t}\\n\\n}<\\/pre>',new F5(r.a)).a),Ymc(h,a.a),h),x6(a.J));Pab(c,(i=new $mc,Zmc(i,(s=new Stc,s.a+='<pre>\\n@Configuration\\n@Import(ComandServiceConfig.class)\\n@EnableWebMvc\\n@ComponentScan(basePackages = {\"fr.putnami.pwt.tutorial.server.controller\", \"fr.putnami.pwt.tutorial.server.service\"})\\npublic class MvcConfig extends WebMvcConfigurerAdapter {\\n\\n\\tprivate static final int RESOURCE_CACHE_PERIOD = 60 * 60 * 24 * 7; // 1 week in second\\n\\n\\t@Override\\n\\tpublic void addResourceHandlers(ResourceHandlerRegistry registry) {\\n\\t\\tregistry.addResourceHandler(\"/index.html\").addResourceLocations(\"/index.html\").setCachePeriod(RESOURCE_CACHE_PERIOD);\\n\\t\\tregistry.addResourceHandler(\"/Tutorial/**\").addResourceLocations(\"/Tutorial/\").setCachePeriod(RESOURCE_CACHE_PERIOD);\\n\\t}\\n}<\\/pre>',new F5(s.a)).a),Ymc(i,a.a),i),x6(a.L));Pab(c,(j=new $mc,Zmc(j,(t=new Stc,t.a+='<pre>\\n\\t&lt;!-- Spring configuration --&gt;\\n\\t&lt;servlet&gt;\\n\\t\\t&lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;\\n\\t\\t&lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;\\n\\t\\t&lt;init-param&gt;\\n\\t\\t\\t&lt;param-name&gt;contextClass&lt;/param-name&gt;\\n\\t\\t\\t&lt;param-value&gt;\\n\\t\\t\\t\\torg.springframework.web.context.support.AnnotationConfigWebApplicationContext\\n\\t\\t\\t&lt;/param-value&gt;\\n\\t\\t&lt;/init-param&gt;\\n\\t\\t&lt;init-param&gt;\\n\\t\\t\\t&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\\n\\t\\t\\t&lt;param-value&gt;fr.putnami.pwt.tutorial.server.config&lt;/param-value&gt;\\n\\t\\t&lt;/init-param&gt;\\n\\t\\t&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;\\n\\t&lt;/servlet&gt;\\n\\t&lt;servlet-mapping&gt;\\n\\t\\t&lt;servlet-name&gt;dispatcher&lt;/servlet-name&gt;\\n\\t\\t&lt;url-pattern&gt;/*&lt;/url-pattern&gt;\\n\\t&lt;/servlet-mapping&gt;<\\/pre>',new F5(t.a)).a),Ymc(j,a.b),j),x6(a.N));Pab(c,new cmb((u=new Stc,u.a+=\"<h4>Note :<\\/h4><p>You can see that we don't register the services in the web.xml anymore<\\/p>\",new F5(u.a)).a),x6(a.g));Pab(c,(k=new mtb(2),ktb(k,(v=new Stc,v.a+='Step 3 : <em>Annotate your services<\\/em>',new F5(v.a)).a),jw(k.L,QJc,RJc),k),x6(a.j));Pab(c,(l=new $mc,Zmc(l,(w=new Stc,w.a+='<pre>\\n@Service\\npublic class ContactServiceImpl implements ContactService {\\n\\t...\\n}<\\/pre>',new F5(w.a)).a),Ymc(l,a.a),l),x6(a.n));Pab(c,(m=new $mc,Zmc(m,(A=new Stc,A.a+='<pre>\\n@Service\\npublic class IssueServiceImpl implements IssueService {\\n\\t...\\n}<\\/pre>',new F5(A.a)).a),Ymc(m,a.a),m),x6(a.p));Pab(c,new cmb((B=new Stc,B.a+='<h4>Note :<\\/h4><p>You can see the result in the <code>tutorials/Part9<\\/code> folder in the PWT sources.<\\/p>',new F5(B.a)).a),x6(a.s));a.O.j=c;return c}\np3(1380,46,MJc);var k_=qrc(DIc,'Tuto9SpringPage',1380,RU);p3(929,1380,NJc,sic);_.th=function tic(a,b){E$b(this);b.xe(this)};var g_=qrc(DIc,'Tuto9SpringPage_Injector',929,k_);p3(1040,1,{},wic);var h_=qrc(DIc,'Tuto9SpringPage_Tuto9SpringPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets',1040,y1);var Aic;p3(698,1,hIc);_.Je=function Kic(){var a;!(Z4(),Aic)&&(Aic=new sic);a=new H$b;pjb(a,Aic);ijb(this.a,a)};oEc(Vt)(32);\n//# sourceURL=Documentation-32.js\n")
