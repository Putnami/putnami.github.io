$wnd.Documentation.runAsyncCallback6("function p7b(){rab(this,_6b(new a7b(this)))}\nfunction c7b(a,b){var c;c=new Stc;c.a+=FGc;Ptc(c,U5(a));c.a+=EGc;Ptc(c,U5(b));c.a+=GGc;return new F5(c.a)}\nfunction _6b(a){var b,c,d,e,f,g;c=new ctb(c7b(a.a,a.p).a);jw((G6(),c.L),LGc,'PWT - Injection Framework');b=A6(c.L);x6(a.b);x6(a.r);b.b?Rv(b.b,b.a,b.c):C6(b.a);Pab(c,(d=new ftb(d7b(a.c).a),e=A6(d.L),x6(a.o),e.b?Rv(e.b,e.a,e.c):C6(e.a),Pab(d,(f=new mtb(1),ktb(f,(g=new Stc,g.a+=VHc,new F5(g.a)).a),f),x6(a.o)),a.K.k=d,d),x6(a.b));Pab(c,$6b(a),x6(a.r));return c}\nfunction d7b(a){var b;b=new Stc;b.a+=FGc;Ptc(b,U5(a));b.a+=\"'><\\/span> <p class='lead'> <strong title='Putnami Web Toolkit'>PWT<\\/strong> provides a lot of good features, reducing the amount of code needed to develop great applications.<br> But we think that it is still not enough. That's why we developped the injection part of the framework, further reducing the code amount. <\\/p>\";return new F5(b.a)}\nfunction a7b(a){this.K=a;this.c=_w($doc);this.s=_w($doc);this.u=_w($doc);this.w=_w($doc);this.B=_w($doc);this.D=_w($doc);this.G=_w($doc);this.I=_w($doc);this.d=_w($doc);this.f=_w($doc);this.i=_w($doc);this.k=_w($doc);this.a=_w($doc);this.p=_w($doc);this.o=new y6(this.c);this.t=new y6(this.s);this.v=new y6(this.u);this.A=new y6(this.w);this.C=new y6(this.B);this.F=new y6(this.D);this.H=new y6(this.G);this.J=new y6(this.I);this.e=new y6(this.d);this.g=new y6(this.f);this.j=new y6(this.i);this.n=new y6(this.k);this.b=new y6(this.a);this.r=new y6(this.p)}\nfunction $6b(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B;c=new ctb(b7b(a.s,a.u,a.w,a.B,a.D,a.G,a.I,a.d,a.f,a.i,a.k).a);b=A6((G6(),c.L));x6(a.t);x6(a.v);x6(a.A);x6(a.C);x6(a.F);x6(a.H);x6(a.J);x6(a.e);x6(a.g);x6(a.j);x6(a.n);b.b?Rv(b.b,b.a,b.c):C6(b.a);Pab(c,(d=new mtb(2),ktb(d,(o=new Stc,o.a+=yOc,new F5(o.a)).a),jw(d.L,QJc,RJc),d),x6(a.t));Pab(c,(e=new cmb((p=new Stc,p.a+='<h4>Note :<\\/h4>The view associated to places via <code>@ActivityDescription<\\/code> annotation are created via the <code>GWT.create<\\/code> method.',new F5(p.a)).a),amb(e,(omb(),lmb)),e),x6(a.v));Pab(c,(f=new mtb(2),ktb(f,(q=new Stc,q.a+='What can be injected?',new F5(q.a)).a),jw(f.L,QJc,RJc),f),x6(a.A));Pab(c,(g=new mtb(3),ktb(g,(r=new Stc,r.a+='On <em>Injected<\\/em>, <em>View<\\/em> or <em>Module<\\/em> classes',new F5(r.a)).a),jw(g.L,QJc,RJc),g),x6(a.C));Pab(c,(h=new cmb((s=new Stc,s.a+='<h4>Note :<\\/h4> <ul> <li>All those annotations work with GWT rebind feature, and work only on <code>Injected<\\/code>, <code>View<\\/code> or <code>Module<\\/code> implementing classes.<\\/li> <\\/ul>',new F5(s.a)).a),amb(h,lmb),h),x6(a.F));Pab(c,(i=new mtb(3),ktb(i,(t=new Stc,t.a+='On <em>View<\\/em> classes',new F5(t.a)).a),jw(i.L,QJc,RJc),i),x6(a.H));Pab(c,(j=new cmb((u=new Stc,u.a+='<h4>Note :<\\/h4> <ul> <li>Those annotations work with GWT rebind feature, and work only on <code>View<\\/code> implementing classes.<\\/li> <\\/ul>',new F5(u.a)).a),amb(j,lmb),j),x6(a.J));Pab(c,(k=new mtb(3),ktb(k,(v=new Stc,v.a+='On <em>Module<\\/em> classes',new F5(v.a)).a),jw(k.L,QJc,RJc),k),x6(a.e));Pab(c,(l=new cmb((w=new Stc,w.a+='<h4>Note :<\\/h4> <ul> <li>Those annotations work with GWT rebind feature, and work only on <code>Module<\\/code> implementing classes.<\\/li> <\\/ul>',new F5(w.a)).a),amb(l,lmb),l),x6(a.g));Pab(c,(m=new mtb(2),ktb(m,(A=new Stc,A.a+=zOc,new F5(A.a)).a),jw(m.L,QJc,RJc),m),x6(a.j));Pab(c,(n=new $mc,Zmc(n,(B=new Stc,B.a+=AOc,new F5(B.a)).a),Ymc(n,(Hnc(),Gnc)),n),x6(a.n));a.K.j=c;return c}\nfunction b7b(a,b,c,d,e,f,g,h,i,j,k){var l;l=new Stc;l.a+=FGc;Ptc(l,U5(a));l.a+=\"'><\\/span> <p>We use the rebind feature of GWT. This feature can be enabled on classes which <em>implement specific interface<\\/em>. Such classes go throught the rebind mecanism when they are created via the <code>GWT.create<\\/code> method.<\\/p>  <p>We created some interfaces to implements in order to allow this injection : <ul> <li><code>Injected<\\/code> for standard classes<\\/li> <li><code>View<\\/code> for view classes<\\/li> <li><code>Module<\\/code> for entry point classes<\\/li> <\\/ul> Each one accepts different annotations corresponding to its role in the application. <\\/p> <span id='\";Ptc(l,U5(b));l.a+=EGc;Ptc(l,U5(c));l.a+=EGc;Ptc(l,U5(d));l.a+=\"'><\\/span> <p>We provide the following annotations :<\\/p> <ul> <li><code>PostConstruct<\\/code> used on method in order to do some things with injected stuff (after injection) at init time.<\\/li> <li><code>Templated<\\/code> used on <code>Composite<\\/code> extending class to bind it to template (see <a href='#!Internationalization'>Internationalization<\\/a>)<\\/li> <li><code>InjectResource<\\/code> used on field to generate <code>GWT.create<\\/code> call.<\\/li> <li><code>InjectService<\\/code> used on service interface to init and bind the service to the class (see <a href='#!ServerCalls'>ServerCalls<\\/a>)<\\/li> <li><code>InjectModel<\\/code> used on field of type <code>Model&lt;T&gt;<\\/code> to generate a specific model (see <a href='#!DataBinding'>DataBinding<\\/a>)<\\/li> <li><code>Initialize<\\/code> used on <code>EditorModel<\\/code> implementing field to initialize the forms (see <a href='#!DataBinding'>DataBinding<\\/a>)<\\/li> <li><code>ErrorHandler<\\/code> used on method to generate <code>ErrorHandler<\\/code> extending classes (see <a href='#!Errors'>Errors handling<\\/a>)<\\/li> <\\/ul> <span id='\";Ptc(l,U5(e));l.a+=VJc;Ptc(l,U5(f));l.a+=\"'><\\/span> <p>In addition, we provide the following annotations :<\\/p> <ul> <li><code>PresentHandler<\\/code>, <code>MayStopActivityHandler<\\/code> and <code>StopActivityHandler<\\/code> used on methods for handling the lifecycle of an activity (see <a href='#!Navigation'>Navigation<\\/a>)<\\/li> <li><code>Secured<\\/code> used on view class to secure them (see <a href='#!Security'>Security<\\/a>)<\\/li> <\\/ul> <span id='\";Ptc(l,U5(g));l.a+=UJc;Ptc(l,U5(h));l.a+=\"'><\\/span> <p>In addition, we provide the following annotations :<\\/p> <ul> <li><code>MvpDescription<\\/code> used on the class to describe the Mvp part of the app : display panel, default place, availables activities (see <a href='#!Navigation'>Navigation<\\/a>)<\\/li> <li><code>ThemeDescription<\\/code> used on the class to init the theme of the application (see <a href='#!Bootstrap'>Bootstrap<\\/a>)<\\/li> <li><code>ErrorManagmentDescription<\\/code> used on the class to describe the Error handling : set the error manager, add some error handlers. (see <a href='#!Errors'>Errors handling<\\/a>)<\\/li> <li><code>EntryPointHandler<\\/code> used on methods to be called on entry point start instead of <code>onModuleStart()<\\/code> method (see <a href='#!Navigation'>Navigation<\\/a>)<\\/li> <\\/ul> <span id='\";Ptc(l,U5(i));l.a+=UJc;Ptc(l,U5(j));l.a+=\"'><\\/span> <p>In order to use the annotations, you'll have to import the <code>Inject<\\/code> module in your module xml file<\\/p> <span id='\";Ptc(l,U5(k));l.a+=GGc;return new F5(l.a)}\np3(1361,46,MJc);var vX=qrc(sIc,'InjectionPage',1361,RU);p3(988,1,{},a7b);var rX=qrc(sIc,'InjectionPage_InjectionPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets',988,y1);var e7b;p3(637,1,hIc);_.Je=function o7b(){var a;!(Z4(),e7b)&&(e7b=new p7b);a=new H$b;pjb(a,e7b);ijb(this.a,a)};p3(900,1361,NJc,p7b);_.th=function q7b(a,b){E$b(this);b.xe(this)};var uX=qrc(sIc,'InjectionPage_Injector',900,vX);oEc(Vt)(6);\n//# sourceURL=Documentation-6.js\n")
