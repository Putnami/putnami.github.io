$wnd.Documentation.runAsyncCallback14("function O1b(a){this.a=a}\nfunction ioc(a,b){N9(a.c,b)}\nfunction Imc(a,b){vnc(a.a,b)}\nfunction hoc(a,b){return Yab(a.c,b)}\nfunction joc(a,b){a.b=b;jw(G8(a.c),RMc,b)}\nfunction Fmc(a,b){mub(a);a.C=b;tnc(a.a,b)}\nfunction Jmc(a,b){var c;c=jZb(b);Fmc(a,c)}\nfunction Hmc(a){if(a.f){a.f=false;a9(a.b);p9(a.e,a.c)}}\nfunction Emc(a){a.b=new loc;a.c=new Moc;a.a=new wnc(a.b,a.c);a.f=false}\nfunction R1b(a){var b;b=new Stc;b.a+=_Oc;Ptc(b,U5(a));b.a+=GGc;return new F5(b.a)}\nfunction S1b(a){var b;b=new Stc;b.a+=aPc;Ptc(b,U5(a));b.a+=GGc;return new F5(b.a)}\nfunction U1b(a,b){var c;c=new Stc;c.a+=FGc;Ptc(c,U5(a));c.a+=EGc;Ptc(c,U5(b));c.a+=GGc;return new F5(c.a)}\nfunction J1b(a,b){if(_sc(OJc,b.a)){J8(a.a,false);J8(a.b,true)}else{J8(a.a,true);J8(a.b,false)}}\nfunction Lmc(){kub();vub.call(this,new Fab);Emc(this);this.e=XF(this.G,182);Gmc(this)}\nfunction Mmc(a){wub.call(this,new Fab,a);Emc(this);this.e=XF(this.G,182);Gmc(this);rnc(this.a,a.a)}\nfunction loc(){goc();this.c=new Gcb;Yab(this.c,this);X8(this.c,this,(WA(),WA(),VA));rab(this,this.c);oZb(this,foc)}\nfunction e2b(){this.d=Rq(QF(OF(E1,1),uEc,2,4,[PJc,OJc]));rab(this,M1b(new N1b(this)));pvb(this.c,PJc);J8(this.b,false)}\nfunction unc(a){var b,c,d;a.d.b=PF(y1,uEc,1,0,3,1);b=a.e;for(d=bo(Yn(a.a,(gnc(),dnc)));Lj(d);){c=XF(Mj(d),253);c.ui(a)}return b}\nfunction Kmc(a){if(!a.f){a.f=true;G8(a.b).style[YGc]=((G8(a.c).offsetHeight||0)|0)+(Bz(),_Gc);a9(a.c);p9(a.e,a.b);ioc(a.b,true)}}\nfunction Gmc(a){p9(a.e,a.c);a.A=wsc(0);pw((G6(),a.L),0);a.d=new fXb(a.b,QF(OF(wK,1),uEc,50,0,[a.b]));X8(a,a,(HA(),HA(),GA));X8(a.c,a,(hA(),hA(),gA));YWb(a.d,a);tZb(a,jub);oZb(a.b,jub);qub(a,a.v)}\nfunction Q1b(a){var b;b=new Stc;b.a+=FGc;Ptc(b,U5(a));b.a+=\"'><\\/span> <p class='lead'> The code editor plugin provides a way to display highlighted String, and an ability to edit the String with completion. <\\/p>\";return new F5(b.a)}\nfunction M1b(a){var b,c,d,e,f,g;c=new ctb(U1b(a.c,a.I).a);jw((G6(),c.L),LGc,'PWT - code editor plugins');b=A6(c.L);x6(a.d);x6(a.bb);b.b?Rv(b.b,b.a,b.c):C6(b.a);Pab(c,(d=new ftb(Q1b(a.e).a),e=A6(d.L),x6(a.H),e.b?Rv(e.b,e.a,e.c):C6(e.a),Pab(d,(f=new mtb(1),ktb(f,(g=new Stc,g.a+='Code editor plugin',new F5(g.a)).a),f),x6(a.H)),a.zb.k=d,d),x6(a.d));Pab(c,L1b(a),x6(a.bb));return c}\nfunction N1b(a){this.yb=new O1b(this);this.zb=a;this.T=_w($doc);this.X=_w($doc);this.e=_w($doc);this.cb=_w($doc);this.mb=_w($doc);this.ob=_w($doc);this.qb=_w($doc);this.sb=_w($doc);this.ub=_w($doc);this.wb=_w($doc);this.f=_w($doc);this.i=_w($doc);this.k=_w($doc);this.o=_w($doc);this.r=_w($doc);this.t=_w($doc);this.v=_w($doc);this.A=_w($doc);this.C=_w($doc);this.F=_w($doc);this.J=_w($doc);this.L=_w($doc);this.N=_w($doc);this.P=_w($doc);this.R=_w($doc);this.V=_w($doc);this.Z=_w($doc);this._=_w($doc);this.db=_w($doc);this.fb=_w($doc);this.hb=_w($doc);this.jb=_w($doc);this.c=_w($doc);this.I=_w($doc);this.U=new y6(this.T);this.Y=new y6(this.X);this.H=new y6(this.e);this.lb=new y6(this.cb);this.nb=new y6(this.mb);this.pb=new y6(this.ob);this.rb=new y6(this.qb);this.tb=new y6(this.sb);this.vb=new y6(this.ub);this.xb=new y6(this.wb);this.g=new y6(this.f);this.j=new y6(this.i);this.n=new y6(this.k);this.p=new y6(this.o);this.s=new y6(this.r);this.u=new y6(this.t);this.w=new y6(this.v);this.B=new y6(this.A);this.D=new y6(this.C);this.G=new y6(this.F);this.K=new y6(this.J);this.M=new y6(this.L);this.O=new y6(this.N);this.Q=new y6(this.P);this.S=new y6(this.R);this.W=new y6(this.V);this.$=new y6(this.Z);this.ab=new y6(this._);this.eb=new y6(this.db);this.gb=new y6(this.fb);this.ib=new y6(this.hb);this.kb=new y6(this.jb);this.d=new y6(this.c);this.bb=new y6(this.I);this.b=(Hnc(),Gnc);this.a=(znc(),ync)}\nfunction T1b(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G){var H;H=new Stc;H.a+=FGc;Ptc(H,U5(a));H.a+=\"'><\\/span> <p> The code editor plugin provides 3 components :<\\/p> <dl class='dl-horizontal'> <dt>A code input<\\/dt> <dd>A <code>InputCode<\\/code> is a component displaying the highlighted string and switch on focus to a TextArea able to edit the String. On blur, the highlighted string is displayed.<\\/dd> <dd>A CodeAssist aspect can be applyied to the TextArea to assist typping.<\\/dd> <dd>The <code>InputCode<\\/code> is compatible with the PWT's Data binding core fonctionality (extends <code>AbstractInput<\\/code>).<\\/dd> <dt>A static code output<\\/dt> <dd>A <code>StaticOutputCode<\\/code> is a component displaying the highlighted string.<\\/dd> <dt>A code output<\\/dt> <dd>A <code>OutputCode<\\/code> is a <code>StaticOutputCode<\\/code> compatible with the PWT's Data binding core fonctionality.<\\/dd> <\\/dl>  <p>Each of those components contains a <code>CodeInput<\\/code> and / or a <code>CodeOutput<\\/code>. They are internal components respectively in charge of handling the String input and displaying the string<\\/p>  <span id='\";Ptc(H,U5(b));H.a+=EGc;Ptc(H,U5(c));H.a+=EGc;Ptc(H,U5(d));H.a+=UJc;Ptc(H,U5(e));H.a+=EGc;Ptc(H,U5(f));H.a+=\"'><\\/span>  <br> <br> <span id='\";Ptc(H,U5(g));H.a+=\"'><\\/span> <p>All the 3 components need a <code>CodeEditorConfiguration<\\/code> to highlight the string and eventually assist the typping.<\\/p> <p>A configuration contains a list of aspects to apply to the CodeInput or CodeOutput. It provides the ability to easily extends the fonctionalities in the future.<\\/p> <p>Today, we provide two aspects :<\\/p> <dl class='dl-horizontal'> <dt>Text render aspect<\\/dt> <dd>This aspect enable the syntax highlighting for the <code>CodeOutput<\\/code><\\/dd> <dt>Content assist aspect<\\/dt> <dd>This aspect enable the content assist for the <code>CodeInput<\\/code><\\/dd> <\\/dl>  <br> <span id='\";Ptc(H,U5(h));H.a+=\"'><\\/span> <p>Text highlighting uses String tokenization.<\\/p> <p>To define a syntax highlighting configuration, we just need to define the tokenizers and associate the CSS class to render the tokens.<\\/p> <p>There are two text render aspects : One simple (<code>TextRenderAspect<\\/code>) which associate a token with a css class and one a little bit more complicated (<code>PartitionnedTextRenderAspect<\\/code>) which at split the text in partitions and then tokenize independenly every partition. This last aspect allows to differently highlight partitions (example given : in XML files the content of the tags are not highlighted as their children)<\\/p>  <br> <p>The tokenizer are visited in their declaration order. Only one Token can be extracted from a set of chars (Token other than UNDEFINED).<\\/p> <span id='\";Ptc(H,U5(i));H.a+=\"'><\\/span> <p>A tokenizer is a <code>TokenEvaluator<\\/code>. It goes through the String char by char via a char scanner (which retains the current scanner position) and return a Token corresponding to the input. This token is Undefined if the tokenizer didn't find anything.<\\/p> <p>We provide a bunch of TokenEvaluator, but you can easily create your own if needed.<\\/p> <p>Provided <code>TokenEvaluator<\\/code> are : <\\/p> <dl class='dl-horizontal'> <dt>Whitespace evaluator<\\/dt> <dd>Used to detect the whitespaces<\\/dd> <dt>Words evaluator<\\/dt> <dd>Used to detect particular words (keywords, regExp, etc...). A word is defined by the <code>WordDetector<\\/code> in charge of delimiting the start and end of the word.<\\/dd> <dt>Pattern evaluator<\\/dt> <dd>Used to detect token starting with a pattern (not a regexp) and eventualy ending with another pattern or with the end of the current line or the current file.<\\/dd> <dd>It can be used to detect tokens on single line or on multi lines<\\/dd> <dt>Balanced Pattern evaluator<\\/dt> <dd>Particular Pattern evaluator used to detect token like parenthesis or curly brace eclosed expressions : starting with a pattern (not a regexp) and ending with another pattern but each start pattern must have a corresponding endPattern..<\\/dd> <\\/dl> <span id='\";Ptc(H,U5(j));H.a+=EGc;Ptc(H,U5(k));H.a+=EGc;Ptc(H,U5(l));H.a+=bPc;Ptc(H,U5(m));H.a+=EGc;Ptc(H,U5(n));H.a+=bPc;Ptc(H,U5(o));H.a+=\"'><\\/span> <p>To activate content assist on the input, you must add a <code>ContentAssistAspect<\\/code> on the configuration<\\/p> <p>The content assist aspect need a <code>ContentAssistHandler<\\/code> in charge of maintaining the oracle, extracting the query to provide to the oracle, keeping the oracle suggestion size limit and handling the oracle suggestion applyance.<\\/p> <p>We provide some assist handler (like <code>JavaKeywordAssistHandler<\\/code> which provide code assist to insert java keyword, but no matter where you are in the java class you're writing) but you'll need to write your own to obtain what you want.<\\/p> <p>In order to write your assist handler you may want to follow these steps :<\\/p> <ol> <li>Extends <code>AbstractContentAssistHandler<\\/code><\\/li> <li>Override the <code>getQueryText<\\/code> method and update the oracle in this method. Indeed you can parse the input content to know the context (example : you are in a java method so you can know that you should probably not suggest the \\\"import\\\" keyword, and you can extract previous method and field names, etc..) <span id='\";Ptc(H,U5(p));H.a+=\"'><\\/span> <\\/li> <li>Override the <code>handleSuggestionSelected<\\/code> method in order to insert the selected suggestion in the input and set the cursor position. <span id='\";Ptc(H,U5(q));H.a+=\"'><\\/span> <\\/li> <\\/ol> <span id='\";Ptc(H,U5(r));H.a+=VJc;Ptc(H,U5(s));H.a+=UJc;Ptc(H,U5(t));H.a+=EGc;Ptc(H,U5(u));H.a+=cPc;Ptc(H,U5(v));H.a+=EGc;Ptc(H,U5(w));H.a+=UJc;Ptc(H,U5(A));H.a+=\"'><\\/span> <p>In order to use the code editor you just need to provide him a <code>CodeEditorConfiguration<\\/code>. Either you write your own, either you use one of the provided ones.<\\/p> <p>Today we provide two configurations :<\\/p> <dl class='dl-horizontal'> <dt>Xml Configuration<\\/dt> <dd>Provides a XML syntax highlighting (used in this Showcase)<\\/dd> <dt>Java Configuration<\\/dt> <dd>Provides a Java syntax highlighting (used in this Showcase) and a simple Java keyword content assist<\\/dd> <\\/dl> <br> <p>The configuration can be applyied in the ui.xml files by importing the static value :<\\/p> <span id='\";Ptc(H,U5(B));H.a+=\"'><\\/span> <br> <p>The configuration can also be applyied in the java class <\\/p> <span id='\";Ptc(H,U5(C));H.a+=dNc;Ptc(H,U5(D));H.a+=\"'><\\/span> <p>The code editor value can be set programmaticaly with the <code>edit(String)<\\/code> method. This can be automated with the <code>Editor<\\/code> core fonctionnality for <code>InputCode<\\/code> and <code>OutputCode<\\/code><\\/p> <p>The code editor implements HasHTML in order to allow value definition in ui.xml files. However, in most cases, the text indent and all the text format is important to render. So instead of encode every newline and tabulation char we use a hook including the <code>&lt;pre&gt;<\\/code> tag and the <code>&lt;![CDATA[]]&gt;<\\/code> content.<\\/p> <p>Actually, GWT's ui parser keep text format only inside the <code>&lt;pre&gt;<\\/code> tag so we define the value in this tag. But we do not want our code editor value to be parsed as HTML so we include it in a <code>&lt;![CDATA[]]&gt;<\\/code> child.<\\/p> <span id='\";Ptc(H,U5(F));H.a+=dNc;Ptc(H,U5(G));H.a+=\"'><\\/span> <p>The provided highlightings can be customize overriding the <code>pwt.css<\\/code> file content.<\\/p>\";return new F5(H.a)}\nfunction L1b(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,ab,bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb,ob;c=new ctb(T1b(a.cb,a.mb,a.ob,a.qb,a.sb,a.ub,a.wb,a.f,a.i,a.k,a.o,a.r,a.t,a.v,a.A,a.C,a.F,a.J,a.L,a.N,a.P,a.R,a.V,a.Z,a._,a.db,a.fb,a.hb,a.jb).a);b=A6((G6(),c.L));x6(a.lb);x6(a.nb);x6(a.pb);x6(a.rb);x6(a.tb);x6(a.vb);x6(a.xb);x6(a.g);x6(a.j);x6(a.n);x6(a.p);x6(a.s);x6(a.u);x6(a.w);x6(a.B);x6(a.D);x6(a.G);x6(a.K);x6(a.M);x6(a.O);x6(a.Q);x6(a.S);x6(a.W);x6(a.$);x6(a.ab);x6(a.eb);x6(a.gb);x6(a.ib);x6(a.kb);b.b?Rv(b.b,b.a,b.c):C6(b.a);Pab(c,(d=new mtb(2),ktb(d,(O=new Stc,O.a+=RHc,new F5(O.a)).a),jw(d.L,QJc,RJc),d),x6(a.lb));Pab(c,(e=new mtb(2),ktb(e,(P=new Stc,P.a+=XOc,new F5(P.a)).a),e),x6(a.nb));Pab(c,(f=new mtb(3),ktb(f,(Q=new Stc,Q.a+='InputCode',new F5(Q.a)).a),f.c='edit on focus',jtb(f),f),x6(a.pb));Pab(c,(g=new Lmc,Jmc(g,(R=new Stc,R.a+=YOc,new F5(R.a)).a),Imc(g,a.a),g),x6(a.rb));Pab(c,(h=new mtb(3),ktb(h,(S=new Stc,S.a+='OutputCode / StaticCode',new F5(S.a)).a),h),x6(a.tb));Pab(c,(i=new $mc,Zmc(i,(T=new Stc,T.a+=YOc,new F5(T.a)).a),Ymc(i,a.a),i),x6(a.vb));Pab(c,(j=new mtb(2),ktb(j,(U=new Stc,U.a+='Configuration',new F5(U.a)).a),jw(j.L,QJc,RJc),j),x6(a.xb));Pab(c,(k=new mtb(3),ktb(k,(V=new Stc,V.a+='Text render',new F5(V.a)).a),jw(k.L,QJc,RJc),k),x6(a.g));Pab(c,(l=new mtb(4),ktb(l,(W=new Stc,W.a+='Provided tokenizer',new F5(W.a)).a),jw(l.L,QJc,RJc),l),x6(a.j));Pab(c,(m=new mtb(4),ktb(m,(X=new Stc,X.a+=XOc,new F5(X.a)).a),jw(m.L,QJc,RJc),m),x6(a.n));Pab(c,(n=new mtb(5),ktb(n,(Y=new Stc,Y.a+='Java text render',new F5(Y.a)).a),n),x6(a.p));Pab(c,(o=new $mc,Zmc(o,(Z=new Stc,Z.a+='<pre>\\n/* Create the Renderer Aspect */\\nTextRendererAspect renderAspect = new TextRendererAspect();\\n\\n/* Java String tokenizer (between double quotes) and associate the \"code-editor-java-string\" CSS class */\\nrenderAspect.registerEvaluator(new SingleLineTokenEvaluator(\"\\\\\"\", \"\\\\\"\", new CssRendererTokenContent(\"code-editor-java-string\"), \\'\\\\\\\\\\'));\\n\\n/* Single line comment tokenizer and associate the \"code-editor-java-single-line-comment\" CSS class */\\nrenderAspect.registerEvaluator(new EndOfLineTokenEvaluator(\"//\", new CssRendererTokenContent(\"code-editor-java-single-line-comment\")));\\n\\n/* Create a keyword tokenizer with a default CSS class associated to null (so all the non matching inputs are rendered as is).*/\\nKeywordsTokenEvaluator wordTokenEvaluator = new KeywordsTokenEvaluator(CssRendererTokenContent.DEFAULT_CSS_TOKEN_CONTENT);\\n/* Associate keywords to a CSS class */\\nwordTokenEvaluator.addWords(new CssRendererTokenContent(\"code-editor-java-keyword\"), \"abstract\", \"assert\", \"boolean\" /* ... */);\\n/* Associate eventualy other keywords to an other CSS class */\\nwordTokenEvaluator.addWords(new CssRendererTokenContent(\"code-editor-java-keyword-other\"), \"true\", \"false\", \"null\");\\n\\n/* Add the keyword tokenizer to the Aspect */\\nrenderAspect.registerEvaluator(wordTokenEvaluator);<\\/pre>',new F5(Z.a)).a),Ymc(o,a.a),o),x6(a.s));Pab(c,(p=new mtb(5),ktb(p,($=new Stc,$.a+='XML text render',new F5($.a)).a),p),x6(a.u));Pab(c,(q=new $mc,Zmc(q,(ab=new Stc,ab.a+='<pre>\\n/* Create the Partitionned Renderer Aspect */\\nPartitionnedTextRendererAspect renderAspect = new PartitionnedTextRendererAspect(true);\\n/* The {@code true} parameter here indicates the if a partition have not inner scanners, \\n* the css token associated with the partition should be used to render the entire partition\\n* (example : XML comment) */\\n\\n/* Detect and Render Xml Comment */\\nrenderAspect.registerPartitionner(new MultiLineTokenEvaluator(\"&lt;!--\", \"--&gt;\", new CssRendererTokenContent(\"code-editor-xml-comment\"), (char) 0, true));\\n\\n/* Detect Xml tag */\\nrenderAspect.registerPartitionner(new MultiLineTokenEvaluator(\"&lt;\", \"&gt;\", XmlPartitionTokenContent.INNER_TAG, (char) 0, true));\\n\\n\\n/* Detect and render start and end Xml tag */\\nWordsTokenEvaluator tagTokenEvaluator = new WordsTokenEvaluator(XMLTagWordDetector.INSTANCE, null);\\ntagTokenEvaluator.addWordMatcher(new XMLStartTagDetector(new CssRendererTokenContent(\"code-editor-xml-tag\")));\\ntagTokenEvaluator.addWordMatcher(new XMLEndTagDetector(new CssRendererTokenContent(\"code-editor-xml-tag\")));\\n\\n/* Detect and render inner Tag word token */\\nWordsTokenEvaluator wordTokenEvaluator = new WordsTokenEvaluator(new CssRendererTokenContent(\"code-editor-xml-attribute\"));\\n/* Detect and render inner Tag Strings */\\nSingleLineTokenEvaluator stringTokenEvaluator = new SingleLineTokenEvaluator(\"\\\\\"\", \"\\\\\"\", new CssRendererTokenContent(\"code-editor-xml-attribute-value\"), \\'\\\\\\\\\\');\\n\\n/* Register inner tag detectors and renderers. */\\nrenderAspect.registerPartitionScanners(XmlPartitionTokenContent.INNER_TAG, stringTokenEvaluator, tagTokenEvaluator, wordTokenEvaluator);<\\/pre>',new F5(ab.a)).a),Ymc(q,a.a),q),x6(a.w));Pab(c,(r=new mtb(3),ktb(r,(bb=new Stc,bb.a+='Content assist',new F5(bb.a)).a),jw(r.L,QJc,RJc),r),x6(a.B));Pab(c,(s=new $mc,Zmc(s,(cb=new Stc,cb.a+=\"<pre>\\n@Override\\npublic String getQueryText(IsWidget textInput) {\\n\\tCodeInput codeInput = (CodeInput) textInput;\\n\\tString currentText = codeInput.getText();\\n\\tint cursorPos = codeInput.getCursorPosition();\\n\\t// Parse text to extract information you want\\n\\t// Update the oracle suggestions\\n\\t// extract and return the String you'll use as query for the oracle (mostly current started word)\\n}<\\/pre>\",new F5(cb.a)).a),Ymc(s,a.a),s),x6(a.D));Pab(c,(t=new $mc,Zmc(t,(db=new Stc,db.a+='<pre>\\n@Override\\npublic void handleSuggestionSelected(IsWidget textInput, Suggestion suggestion) {\\n\\tCodeInput codeInput = (CodeInput) textInput;\\n\\tString currentText = codeInput.getText();\\n\\tint cursorPos = codeInput.getCursorPosition();\\n\\tString newText = // set the new text with currentText, cursorPos, suggestion.getReplacementString(), etc.\\n\\tint newCursorPos = // set the new cursor position with currentText, cursorPos, suggestion.getReplacementString(), etc.\\n\\tcodeInput.setText(newText);\\n\\tcodeInput.setCursorPosition(newCursorPos);\\n}<\\/pre>',new F5(db.a)).a),Ymc(t,a.a),t),x6(a.G));Pab(c,(u=new cmb((eb=new Stc,eb.a+='<h4><em>Note :<\\/em><\\/h4> <p><em>When you parse the input content you can use the tokenizer functionality used for <code>TextRenderAspect<\\/code>.<\\/em><\\/p>',new F5(eb.a)).a),amb(u,(omb(),lmb)),u),x6(a.K));Pab(c,(v=new mtb(2),ktb(v,(fb=new Stc,fb.a+='Code editor usage',new F5(fb.a)).a),jw(v.L,QJc,RJc),v),x6(a.M));Pab(c,(w=new mtb(3),ktb(w,(gb=new Stc,gb.a+=ZOc,new F5(gb.a)).a),w),x6(a.O));Pab(c,(A=new aEb,oZb(A,new nVb(SJc)),svb(A,a.zb.d),Y8(A,a.yb,(!LB&&(LB=new oA),LB)),a.zb.c=A,A),x6(a.Q));Pab(c,(B=new ctb(R1b(a.T).a),oZb(B,new nVb($Oc)),C=A6(B.L),x6(a.U),C.b?Rv(C.b,C.a,C.c):C6(C.a),Pab(B,(D=new $mc,Zmc(D,(hb=new Stc,hb.a+='<pre>\\ndependencies {\\n\\t\"fr.putnami.pwt:pwt-code-editor:$pwtVersion\"\\n}\\n<\\/pre>',new F5(hb.a)).a),Ymc(D,a.a),D),x6(a.U)),a.zb.a=B,B),x6(a.S));Pab(c,(F=new ctb(S1b(a.X).a),oZb(F,new nVb($Oc)),G=A6(F.L),x6(a.Y),G.b?Rv(G.b,G.a,G.c):C6(G.a),Pab(F,(H=new $mc,Zmc(H,(ib=new Stc,ib.a+='<pre>\\n&lt;dependency&gt;\\n\\t&lt;groupId&gt;fr.putnami.pwt&lt;/groupId&gt;\\n\\t&lt;artifactId&gt;pwt-code-editor&lt;/artifactId&gt;\\n\\t&lt;version&gt;${pwt.version}&lt;/version&gt;\\n&lt;/dependency&gt;\\n<\\/pre>',new F5(ib.a)).a),Ymc(H,a.b),H),x6(a.Y)),a.zb.b=F,F),x6(a.W));Pab(c,(I=new mtb(3),ktb(I,(jb=new Stc,jb.a+='Code editor configuration',new F5(jb.a)).a),I),x6(a.$));Pab(c,(J=new $mc,Zmc(J,(kb=new Stc,kb.a+='<pre>\\n&lt;!-- Import the static field --&gt;\\n&lt;ui:import field=\"fr.putnami.pwt.plugin.code.client.configuration.xml.XmlConfiguration.XML_CONFIGURATION\" /&gt;\\n\\n\\t...\\n\\t\\n&lt;c:StaticCode configuration=\"{XML_CONFIGURATION}\"&gt;<\\/pre>',new F5(kb.a)).a),Ymc(J,a.b),J),x6(a.ab));Pab(c,(K=new $mc,Zmc(K,(lb=new Stc,lb.a+='<pre>\\n@UiField\\nStaticCode staticCode;\\n\\n\\t...\\n\\t\\nstaticCode.applyConfiguration(XmlConfiguration.XML_CONFIGURATION);<\\/pre>',new F5(lb.a)).a),Ymc(K,a.a),K),x6(a.eb));Pab(c,(L=new mtb(3),ktb(L,(mb=new Stc,mb.a+='Code editor value',new F5(mb.a)).a),L),x6(a.gb));Pab(c,(M=new $mc,Zmc(M,(nb=new Stc,nb.a+='<pre>\\n&lt;c:StaticCode configuration=\"{JAVA_CONFIGURATION}\"&gt;\\n\\t&lt;pre&gt;&lt;![CDATA[\\n/**\\n* Main method of the sample.\\n*/\\n@Override\\npublic static void main (String[] args) {\\n\\t/* Print all args */\\n\\tfor (String s: args) {\\n\\t\\tSystem.out.println(s);\\n\\t} // End of the for loop\\n}]]&gt;&lt;/pre&gt;\\n&lt;/c:StaticCode&gt;<\\/pre>',new F5(nb.a)).a),Ymc(M,a.b),M),x6(a.ib));Pab(c,(N=new mtb(3),ktb(N,(ob=new Stc,ob.a+='Code editor customization',new F5(ob.a)).a),N),x6(a.kb));a.zb.j=c;return c}\nvar YOc='<pre>\\n/**\\n* Main method of the sample.\\n*/\\n@Override\\npublic static void main (String[] args) {\\n\\t/* Print all args */\\n\\tfor (String s: args) {\\n\\t\\tSystem.out.println(s);\\n\\t} // End of the for loop\\n}<\\/pre>',bPc=\"'><\\/span>  <br> <span id='\";p3(654,46,MJc);var QV=qrc(nIc,'CodeEditorPage',654,RU);p3(999,1,{},N1b);var MV=qrc(nIc,'CodeEditorPage_CodeEditorPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets',999,y1);p3(MFc,1,PFc,O1b);_.jf=function P1b(a){J1b(this.a.zb,a)};var LV=qrc(nIc,'CodeEditorPage_CodeEditorPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets/1',MFc,y1);var V1b;p3(653,1,hIc);_.Je=function d2b(){var a;!(Z4(),V1b)&&(V1b=new e2b);a=new H$b;pjb(a,V1b);ijb(this.a,a)};p3(908,654,NJc,e2b);_.th=function f2b(a,b){E$b(this);b.xe(this)};var PV=qrc(nIc,'CodeEditorPage_Injector',908,QV);p3(554,184,{291:1,102:1,290:1,112:1,50:1,77:1,76:1,16:1,26:1,12:1,15:1,19:1,49:1,14:1,20:1,9:1,13:1,10:1,27:1,66:1,72:1,48:1,94:1,28:1,83:1,118:1,163:1},Lmc,Mmc);_.Cg=function Nmc(a){!this.g&&(this.g=hoc(this.b,new KVb(this)));return aC((!ugb&&(ugb=new vgb),ugb),(keb(),jeb),this,a)};_.Fg=function Omc(){return new Mmc(this)};_.ug=function Pmc(a){Fmc(this,ZF(a))};_.mg=function Qmc(){var a;return mub(this),a=unc(this.a),uub(this,a),!!this.u&&this.u.b.length!=0||(this.C=a),ZF(this.C)};_._g=function Rmc(){return this.b.b};_.Ve=function Smc(a){Hmc(this)};_.Xe=function Tmc(a){Kmc(this)};_.Ye=function Umc(a){Kmc(this)};_.ah=function Vmc(a){joc(this.b,a)};_.f=false;var p0=qrc(dPc,'InputCode',554,xT);p3(1203,19,{50:1,77:1,76:1,498:1,16:1,123:1,26:1,12:1,15:1,19:1,49:1,14:1,20:1,9:1,13:1,10:1,578:1},loc);_.Ze=function moc(a){return X8(this.c,a,(Zz(),Zz(),Yz))};_.$e=function noc(a){return X8(this.c,a,(HA(),HA(),GA))};_._e=function ooc(a){return X8(this.c,a,(MA(),MA(),LA))};_.af=function poc(a){return X8(this.c,a,(WA(),WA(),VA))};_._g=function qoc(){return this.b};_.df=function roc(a){doc(this,this.a,bw(G8(this.c),hLc));this.a=bw(G8(this.c),hLc)};_.jf=function soc(a){doc(this,this.a,bw(G8(this.c),hLc));this.a=bw(G8(this.c),hLc)};_.Yf=function toc(a){M9(this.c,a)};_.Zf=function uoc(a){ioc(this,a)};_.ah=function voc(a){joc(this,a)};_.$f=function woc(a){O9(this.c,a)};var C0=qrc('fr.putnami.pwt.plugin.code.client.input','CodeInputImpl',1203,CM);oEc(Vt)(14);\n//# sourceURL=Documentation-14.js\n")
