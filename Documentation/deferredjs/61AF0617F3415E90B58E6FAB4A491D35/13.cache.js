$wnd.Documentation.runAsyncCallback13("function l6b(){}\nfunction n6b(){}\nfunction p6b(){}\nfunction e6b(){throw new $$b}\nfunction F6b(){oab(this,j6b(new k6b(this)))}\nfunction f6b(){throw new Ts('This is the runtime Exception message')}\nfunction g6b(){throw new ksc('This is the illegal state Exception message')}\nfunction $$b(){Ts.call(this,'This is the custom runtime Exception message')}\nfunction s6b(a,b){var c;c=new Ytc;c.a+=PGc;Vtc(c,X5(a));c.a+=OGc;Vtc(c,X5(b));c.a+=QGc;return new I5(c.a)}\nfunction t6b(a){var b;b=new Ytc;b.a+=PGc;Vtc(b,X5(a));b.a+=\"'><\\/span> <p class='lead'> <strong title='Putnami Web Toolkit'>PWT<\\/strong> provides an easy way to handle errors in the application. <\\/p>\";return new I5(b.a)}\nfunction j6b(a){var b,c,d,e,f,g;c=new itb(s6b(a.b,a.H).a);lw((J6(),c.L),VGc,'PWT - Errors management');b=D6(c.L);A6(a.c);A6(a.K);b.b?Rv(b.b,b.a,b.c):F6(b.a);Mab(c,(d=new ltb(t6b(a.d).a),e=D6(d.L),A6(a.G),e.b?Rv(e.b,e.a,e.c):F6(e.a),Mab(d,(f=new stb(1),qtb(f,(g=new Ytc,g.a+='Errors Handling',new I5(g.a)).a),f),A6(a.G)),a.ab.k=d,d),A6(a.c));Mab(c,i6b(a),A6(a.K));return c}\nfunction k6b(a){this.Z=new l6b;this.$=new n6b;this._=new p6b;this.ab=a;this.d=bx($doc);this.L=bx($doc);this.N=bx($doc);this.P=bx($doc);this.R=bx($doc);this.T=bx($doc);this.V=bx($doc);this.X=bx($doc);this.e=bx($doc);this.g=bx($doc);this.j=bx($doc);this.n=bx($doc);this.p=bx($doc);this.s=bx($doc);this.u=bx($doc);this.w=bx($doc);this.B=bx($doc);this.D=bx($doc);this.I=bx($doc);this.b=bx($doc);this.H=bx($doc);this.G=new B6(this.d);this.M=new B6(this.L);this.O=new B6(this.N);this.Q=new B6(this.P);this.S=new B6(this.R);this.U=new B6(this.T);this.W=new B6(this.V);this.Y=new B6(this.X);this.f=new B6(this.e);this.i=new B6(this.g);this.k=new B6(this.j);this.o=new B6(this.n);this.r=new B6(this.p);this.t=new B6(this.s);this.v=new B6(this.u);this.A=new B6(this.w);this.C=new B6(this.B);this.F=new B6(this.D);this.J=new B6(this.I);this.c=new B6(this.b);this.K=new B6(this.H);this.a=(Fnc(),Enc)}\nfunction i6b(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N;c=new itb(r6b(a.L,a.N,a.P,a.R,a.T,a.V,a.X,a.e,a.g,a.j,a.n,a.p,a.s,a.u,a.w,a.B,a.D,a.I).a);b=D6((J6(),c.L));A6(a.M);A6(a.O);A6(a.Q);A6(a.S);A6(a.U);A6(a.W);A6(a.Y);A6(a.f);A6(a.i);A6(a.k);A6(a.o);A6(a.r);A6(a.t);A6(a.v);A6(a.A);A6(a.C);A6(a.F);A6(a.J);b.b?Rv(b.b,b.a,b.c):F6(b.a);Mab(c,(d=new stb(2),qtb(d,(v=new Ytc,v.a+='Error Manager',new I5(v.a)).a),lw(d.L,$Jc,_Jc),d),A6(a.M));Mab(c,(e=new imb((w=new Ytc,w.a+=\"<p>Note : Exceptions thrown by server-side services don't generate HTTP 500 errors.<\\/p>\",new I5(w.a)).a),gmb(e,(umb(),rmb)),e),A6(a.O));Mab(c,(f=new imb((A=new Ytc,A.a+='<p>Note : This <code>ErrorHandler<\\/code> has the lowest priority.<\\/p>',new I5(A.a)).a),gmb(f,rmb),f),A6(a.Q));Mab(c,(g=new stb(2),qtb(g,(B=new Ytc,B.a+='Error Handlers',new I5(B.a)).a),lw(g.L,$Jc,_Jc),g),A6(a.S));Mab(c,(h=new stb(3),qtb(h,(C=new Ytc,C.a+=ePc,new I5(C.a)).a),h),A6(a.U));Mab(c,(i=new enc,dnc(i,(D=new Ytc,D.a+='<pre>\\npublic class MyExceptionErrorHandler extends AbstractErrorHandler {\\n\\n\\t@Override\\n\\tpublic boolean handle(Throwable error) {\\n\\t\\tif (ErrorManager.get().hasErrorDisplayer()) {\\n\\t\\t\\tErrorManager.get().getErrorDisplayer().display(error, Severity.DANGER);\\n\\t\\t}\\n\\t\\treturn true;\\n\\t}\\n\\n}<\\/pre>',new I5(D.a)).a),cnc(i,a.a),i),A6(a.W));Mab(c,(j=new enc,dnc(j,(F=new Ytc,F.a+='<pre>\\n/*\\n* In Entry point\\n*/\\nErrorManager.get().registerHandler(new MyExceptionErrorHandler());<\\/pre>',new I5(F.a)).a),cnc(j,a.a),j),A6(a.Y));Mab(c,(k=new enc,dnc(k,(G=new Ytc,G.a+='<pre>\\n\\t@ErrorHandler\\n\\tpublic boolean handleAnError(Throwable error) {\\n\\t\\t...\\n\\t}<\\/pre>',new I5(G.a)).a),cnc(k,a.a),k),A6(a.f));Mab(c,(l=new stb(2),qtb(l,(H=new Ytc,H.a+='Error Displayer',new I5(H.a)).a),lw(l.L,$Jc,_Jc),l),A6(a.i));Mab(c,(m=new stb(3),qtb(m,(I=new Ytc,I.a+=ePc,new I5(I.a)).a),lw(m.L,$Jc,_Jc),m),A6(a.k));Mab(c,(n=new enc,dnc(n,(J=new Ytc,J.a+='<pre>\\n/*\\n* In Entry point\\n*/\\nSimpleErrorDisplayer errorDisplayer = new SimpleErrorDisplayer();\\n// Eventually set the error constants\\nerrorDisplayer.setConstants((ConstantsWithLookup) GWT.create(ErrorConstants.class));\\nErrorManager.get().setErrorDisplayer(errorDisplayer);<\\/pre>',new I5(J.a)).a),cnc(n,a.a),n),A6(a.o));Mab(c,(o=new enc,dnc(o,(K=new Ytc,K.a+='<pre>\\npublic interface ErrorConstants extends ConstantsWithLookup {\\n\\n\\t@DefaultStringValue(\"Runtime error\")\\n\\tString runtimeExceptionTitle();\\n\\n\\t@DefaultStringValue(\"An unknown exception occured. Please contact technical services if this Error is blocking\")\\n\\tString runtimeExceptionMessage();\\n}<\\/pre>',new I5(K.a)).a),cnc(o,a.a),o),A6(a.r));Mab(c,(p=new stb(2),qtb(p,(L=new Ytc,L.a+=eKc,new I5(L.a)).a),lw(p.L,$Jc,_Jc),p),A6(a.t));Mab(c,(q=new enc,dnc(q,(M=new Ytc,M.a+='<pre>\\n@ErrorManagmentDescription(\\n\\t\\terrorDisplay = SimpleErrorDisplayer.class,\\n\\t\\terrorHandlers = {\\n\\t\\t\\t\\tUmbrellaExceptionHandler.class, ApplicationUnreachableExceptionHandler.class\\n\\t\\t})\\npublic class MyApp implements Module {\\n\\n}<\\/pre>',new I5(M.a)).a),cnc(q,a.a),q),A6(a.v));Mab(c,(r=new stb(2),qtb(r,(N=new Ytc,N.a+='Try it !',new I5(N.a)).a),lw(r.L,$Jc,_Jc),r),A6(a.A));Mab(c,(s=new Ynb,s.r='Runtime Exception',Nnb(s),Mnb(s,a.Z),s),A6(a.C));Mab(c,(t=new Ynb,t.r='Custom Runtime Exception',Nnb(t),Mnb(t,a.$),t),A6(a.F));Mab(c,(u=new Ynb,u.r='Other Exception',Nnb(u),Mnb(u,a._),u),A6(a.J));a.ab.j=c;return c}\nfunction r6b(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){var s;s=new Ytc;s.a+=PGc;Vtc(s,X5(a));s.a+=\"'><\\/span> <p><strong title='Putnami Web Toolkit'>PWT<\\/strong> use an <code>ErrorManager<\\/code> in wich we register some <code>ErrorHandler<\\/code>s and eventualy a <code>defaultErrorHandler<\\/code> which handle errors after the lower priority handler.<\\/p> <p>It also accepts an <code>ErrorDisplayer<\\/code> to eventually display a message to the end user<\\/p> <p>Default registered <code>ErrorHandler<\\/code>s are<\\/p> <ul> <li><code>ClientErrorHandler<\\/code> handles the 4xx class HTTP errors.<\\/li> <li><code>ServerErrorHandler<\\/code> handles the 5xx class HTTP errors  <span id='\";Vtc(s,X5(b));s.a+=\"'><\\/span> <\\/li> <li><code>DefaultCommandExceptionErrorHandler<\\/code> handles the <code>CommandException<\\/code> (Exceptions occuring server side when calling services method or encapsuling thrown exception). <span id='\";Vtc(s,X5(c));s.a+=\"'><\\/span> <\\/li> <\\/ul> <p>Those provided handlers simply display the error if a <code>ErrorDisplayer<\\/code> is registered.<\\/p>  <span id='\";Vtc(s,X5(d));s.a+=\"'><\\/span> <p>You can register several error<code>ErrorHandler<\\/code>s. They are processed by priority (higher first).<\\/p> <p>To define an <code>ErrorHandler<\\/code> you'll have to define a priority and implement the <code>handle<\\/code> method. If you want to prevent lower priority handlers processing, return <code>true<\\/code>.<\\/p> <p>We provide several base abstract classes to handle Exception, such as<\\/p> <ul> <li><code>AbstractErrorHandler<\\/code> a base class with a default priority.<\\/li> <li><code>AbstractStatusCodeErrorHandler<\\/code> to handle <code>StatusCodeException<\\/code><\\/li> <li><code>AbstractCommandExceptionErrorHandler<\\/code> to handle <code>CommandException<\\/code><\\/li> <li><code>AbstractInvocationExceptionErrorHandler<\\/code> : a particular <code>AbstractCommandExceptionErrorHandler<\\/code> to handle Server side Exception.<\\/li> <\\/ul> <span id='\";Vtc(s,X5(e));s.a+=OGc;Vtc(s,X5(f));s.a+=OGc;Vtc(s,X5(g));s.a+=\"'><\\/span>  <p>Using the <a href='#!Injection'>Injection feature<\\/a> (on <code>Injected<\\/code>, <code>View<\\/code> or <code>Module<\\/code> implementing views), you can define and register <code>ErrorHandler<\\/code> by using the <code>@ErrorHandler<\\/code> annotation :<\\/p> <span id='\";Vtc(s,X5(h));s.a+=cKc;Vtc(s,X5(i));s.a+=\"'><\\/span> <p>In most cases, the errors need to be displayed to the end user. We provide a simple <code>ErrorDisplayer<\\/code> : <code>SimpleErrorDisplayer<\\/code> which display errors with their stacktrace.<\\/p> <p>You can set a <code>ConstantsWithLookup<\\/code> to the <code>SimpleErrorDisplayer<\\/code> to eventually set the error title and message from the error class<\\/p> <ul> <li>When using the <code>display(Throwable, Severity)<\\/code> or the <code>display(String message, Throwable, Severity)<\\/code> method, the title will be extract from the property {classSimpleName}Title in constants.<\\/li> <li>When using the <code>display(Throwable, Severity)<\\/code> method, the message will be extract from the property {classSimpleName}Message in constants.<\\/li> <\\/ul> <br> <p>In order to use this displayer you'll have to set it in the <code>ErrorManager<\\/code><\\/p> <span id='\";Vtc(s,X5(j));s.a+=OGc;Vtc(s,X5(k));s.a+=OGc;Vtc(s,X5(l));s.a+=OGc;Vtc(s,X5(m));s.a+=\"'><\\/span> <p>In the application entry point, if you use the <a href='#!Injection'>Injection feature<\\/a> (the class must implement the <code>Module<\\/code> interface), you can easily init the <code>ErrorManager<\\/code><\\/p> <span id='\";Vtc(s,X5(n));s.a+=OGc;Vtc(s,X5(o));s.a+=OGc;Vtc(s,X5(p));s.a+=OGc;Vtc(s,X5(q));s.a+=OGc;Vtc(s,X5(r));s.a+=QGc;return new I5(s.a)}\ns3(1114,39,_Ec,$$b);var $U=xrc(nIc,'CustomRuntimeException',1114,C1);s3(1366,46,WJc);var jX=xrc(AIc,'ErrorsPage',1366,UU);s3(992,1,{},k6b);var fX=xrc(AIc,'ErrorsPage_ErrorsPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets',992,B1);s3(993,1,WGc,l6b);_.Mg=function m6b(a){f6b()};var cX=xrc(AIc,'ErrorsPage_ErrorsPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets/1',993,B1);s3(994,1,WGc,n6b);_.Mg=function o6b(a){e6b()};var dX=xrc(AIc,'ErrorsPage_ErrorsPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets/2',994,B1);s3(995,1,WGc,p6b);_.Mg=function q6b(a){g6b()};var eX=xrc(AIc,'ErrorsPage_ErrorsPageTemplateBinder_UiBinderLocalized_BinderImpl/Widgets/3',995,B1);var u6b;s3(651,1,rIc);_.Je=function E6b(){var a;!(a5(),u6b)&&(u6b=new F6b);a=new N$b;vjb(a,u6b);ojb(this.a,a)};s3(904,1366,XJc,F6b);_.th=function G6b(a,b){K$b(this);b.xe(this)};var iX=xrc(AIc,'ErrorsPage_Injector',904,jX);uEc(Vt)(13);\n//# sourceURL=Documentation-13.js\n")
